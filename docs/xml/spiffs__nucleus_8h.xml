<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="spiffs__nucleus_8h" kind="file" language="C++">
    <compoundname>spiffs_nucleus.h</compoundname>
    <includedby refid="spiffs__cache_8c" local="yes">src/spiffs_cache.c</includedby>
    <includedby refid="spiffs__check_8c" local="yes">src/spiffs_check.c</includedby>
    <includedby refid="spiffs__gc_8c" local="yes">src/spiffs_gc.c</includedby>
    <includedby refid="spiffs__hydrogen_8c" local="yes">src/spiffs_hydrogen.c</includedby>
    <includedby refid="spiffs__nucleus_8c" local="yes">src/spiffs_nucleus.c</includedby>
    <innerclass refid="structspiffs__fd" prot="public">spiffs_fd</innerclass>
    <innerclass refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" prot="public">SPIFFS_PACKED</innerclass>
    <innerclass refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" prot="public">SPIFFS_PACKED</innerclass>
    <innerclass refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" prot="public">SPIFFS_PACKED</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="spiffs__nucleus_8h_1a71787368214008fd2053cde13af77af6" prot="public" static="no">
        <name>_SPIFFS_ERR_CHECK_FIRST</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="113" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4d1d618c79492609df15120599acb073" prot="public" static="no">
        <name>SPIFFS_ERR_CHECK_OBJ_ID_MISM</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="114" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4c0e97a950d43d0543480a11e5376ff0" prot="public" static="no">
        <name>SPIFFS_ERR_CHECK_SPIX_MISM</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="115" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a6843098f8efde32026320a9a334abe0b" prot="public" static="no">
        <name>SPIFFS_ERR_CHECK_FLAGS_BAD</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="116" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1adfe1935981d878fc423a0e4998d12733" prot="public" static="no">
        <name>_SPIFFS_ERR_CHECK_LAST</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="117" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4e105d977494ba74cb2ab8dcfc6af105" prot="public" static="no">
        <name>SPIFFS_VIS_COUNTINUE</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="120" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a35b443334824c9f871d3826d8c9bb946" prot="public" static="no">
        <name>SPIFFS_VIS_COUNTINUE_RELOAD</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="122" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a165465389d625c1714c2bdc6b98a3656" prot="public" static="no">
        <name>SPIFFS_VIS_END</name>
        <initializer>(SPIFFS_ERR_INTERNAL - 22)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="124" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ae0597bfd7e699fbbc9988fd96cc2da5b" prot="public" static="no">
        <name>SPIFFS_EV_IX_UPD</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="127" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a80228bef6e553ea16af26ac63e10a3ed" prot="public" static="no">
        <name>SPIFFS_EV_IX_NEW</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="129" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a138d9bf4633ac39e20611952c55c5afe" prot="public" static="no">
        <name>SPIFFS_EV_IX_DEL</name>
        <initializer>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="131" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a3f41c17d9b8cb33f72886da0e6dddf2b" prot="public" static="no">
        <name>SPIFFS_EV_IX_MOV</name>
        <initializer>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="133" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a59a6c025b71b83f6eab68348b473e462" prot="public" static="no">
        <name>SPIFFS_EV_IX_UPD_HDR</name>
        <initializer>(4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="135" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a1b64686b5db6672704796d85d2740d62" prot="public" static="no">
        <name>SPIFFS_OBJ_ID_IX_FLAG</name>
        <initializer>((spiffs_obj_id)(1&lt;&lt;(8*sizeof(spiffs_obj_id)-1)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="137" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a541004a2607865ca772a7e8f027b7620" prot="public" static="no">
        <name>SPIFFS_UNDEFINED_LEN</name>
        <initializer>(u32_t)(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="139" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a83d1d53faf6e5bf419a98dc98cbba409" prot="public" static="no">
        <name>SPIFFS_OBJ_ID_DELETED</name>
        <initializer>((spiffs_obj_id)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="141" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1af06364a411ff764a53211135c222d4c6" prot="public" static="no">
        <name>SPIFFS_OBJ_ID_FREE</name>
        <initializer>((spiffs_obj_id)-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="142" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a6ff9e460936b53cda97c3680788748cf" prot="public" static="no">
        <name>SPIFFS_PACKED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="155" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a47d1573038988148d91109a12b20c447" prot="public" static="no">
        <name>SPIFFS_CONFIG_MAGIC</name>
        <initializer>(0x20090315)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="170" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a15d093ea9d6c15c7e9dcc98731446b98" prot="public" static="no">
        <name>SPIFFS_CFG_LOG_PAGE_SZ</name>
        <param><defname>fs</defname></param>
        <initializer>((fs)-&gt;cfg.log_page_size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="173" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a3c3bd36df3759fa99706ed2188036fc7" prot="public" static="no">
        <name>SPIFFS_CFG_LOG_BLOCK_SZ</name>
        <param><defname>fs</defname></param>
        <initializer>((fs)-&gt;cfg.log_block_size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="175" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a79e4bb15d6f1d586ed6f4e26e1d962d2" prot="public" static="no">
        <name>SPIFFS_CFG_PHYS_SZ</name>
        <param><defname>fs</defname></param>
        <initializer>((fs)-&gt;cfg.phys_size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="177" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a765989650c7c0f224d507426f4a8558f" prot="public" static="no">
        <name>SPIFFS_CFG_PHYS_ERASE_SZ</name>
        <param><defname>fs</defname></param>
        <initializer>((fs)-&gt;cfg.phys_erase_block)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="179" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a86faaf6b0da2ad58722b792e04c282b0" prot="public" static="no">
        <name>SPIFFS_CFG_PHYS_ADDR</name>
        <param><defname>fs</defname></param>
        <initializer>((fs)-&gt;cfg.phys_addr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="181" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ab6004e8984cf5e524afd9be161c0f9a0" prot="public" static="no">
        <name>SPIFFS_MAX_PAGES</name>
        <param><defname>fs</defname></param>
        <initializer>( SPIFFS_CFG_PHYS_SZ(fs)/SPIFFS_CFG_LOG_PAGE_SZ(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="186" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a7330cf8b045ccad1360ff833df7a380c" prot="public" static="no">
        <name>SPIFFS_PAGES_PER_BLOCK</name>
        <param><defname>fs</defname></param>
        <initializer>( SPIFFS_CFG_LOG_BLOCK_SZ(fs)/SPIFFS_CFG_LOG_PAGE_SZ(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="189" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a99b23f7812dbfbf787a0cebbce1fb9de" prot="public" static="no">
        <name>SPIFFS_OBJ_LOOKUP_PAGES</name>
        <param><defname>fs</defname></param>
        <initializer>(MAX(1, (SPIFFS_PAGES_PER_BLOCK(fs) * sizeof(spiffs_obj_id)) / SPIFFS_CFG_LOG_PAGE_SZ(fs)) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="192" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1af8d0f7da8f220063549c91f7b8ea6b6f" prot="public" static="no">
        <name>SPIFFS_IS_LOOKUP_PAGE</name>
        <param><defname>fs</defname></param>
        <param><defname>pix</defname></param>
        <initializer>(((pix) % SPIFFS_PAGES_PER_BLOCK(fs)) &lt; SPIFFS_OBJ_LOOKUP_PAGES(fs))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="195" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a6062649cfbe44dee644b6846e9bc55a8" prot="public" static="no">
        <name>SPIFFS_OBJ_LOOKUP_MAX_ENTRIES</name>
        <param><defname>fs</defname></param>
        <initializer>(SPIFFS_PAGES_PER_BLOCK(fs)-SPIFFS_OBJ_LOOKUP_PAGES(fs))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="198" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ab865d1d8a845bf6743897c96401a33d5" prot="public" static="no">
        <name>SPIFFS_BLOCK_TO_PADDR</name>
        <param><defname>fs</defname></param>
        <param><defname>block</defname></param>
        <initializer>( SPIFFS_CFG_PHYS_ADDR(fs) + (block)* SPIFFS_CFG_LOG_BLOCK_SZ(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="201" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a128aee8bd5c6663fa266c4f358353f40" prot="public" static="no">
        <name>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX</name>
        <param><defname>fs</defname></param>
        <param><defname>block</defname></param>
        <param><defname>entry</defname></param>
        <initializer>((block)*SPIFFS_PAGES_PER_BLOCK(fs) + (SPIFFS_OBJ_LOOKUP_PAGES(fs) + entry))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="204" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a0ff7a12a106f28f39d52720fe9a57d9c" prot="public" static="no">
        <name>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PADDR</name>
        <param><defname>fs</defname></param>
        <param><defname>block</defname></param>
        <param><defname>entry</defname></param>
        <initializer>(SPIFFS_BLOCK_TO_PADDR(fs, block) + (SPIFFS_OBJ_LOOKUP_PAGES(fs) + entry) * SPIFFS_CFG_LOG_PAGE_SZ(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="207" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a933152042ada5ebc70a0745c2aae61cb" prot="public" static="no">
        <name>SPIFFS_PAGE_TO_PADDR</name>
        <param><defname>fs</defname></param>
        <param><defname>page</defname></param>
        <initializer>( SPIFFS_CFG_PHYS_ADDR(fs) + (page) * SPIFFS_CFG_LOG_PAGE_SZ(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="210" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4e934758ae562e71bb00be520fdfa213" prot="public" static="no">
        <name>SPIFFS_PADDR_TO_PAGE</name>
        <param><defname>fs</defname></param>
        <param><defname>addr</defname></param>
        <initializer>( ((addr) -  SPIFFS_CFG_PHYS_ADDR(fs)) / SPIFFS_CFG_LOG_PAGE_SZ(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="213" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a0be752d7834722e915205f8330b0a6f0" prot="public" static="no">
        <name>SPIFFS_PADDR_TO_PAGE_OFFSET</name>
        <param><defname>fs</defname></param>
        <param><defname>addr</defname></param>
        <initializer>( ((addr) - SPIFFS_CFG_PHYS_ADDR(fs)) % SPIFFS_CFG_LOG_PAGE_SZ(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="216" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a941797f0f1c10c8d3807d6e329eb9eba" prot="public" static="no">
        <name>SPIFFS_BLOCK_FOR_PAGE</name>
        <param><defname>fs</defname></param>
        <param><defname>page</defname></param>
        <initializer>( (page) / SPIFFS_PAGES_PER_BLOCK(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="219" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a2df326732ef4114c066b2e017d94e2fa" prot="public" static="no">
        <name>SPIFFS_PAGE_FOR_BLOCK</name>
        <param><defname>fs</defname></param>
        <param><defname>block</defname></param>
        <initializer>( (block) * SPIFFS_PAGES_PER_BLOCK(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="222" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a827f3051c56eb3f6e9c51494c4c70e8e" prot="public" static="no">
        <name>SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE</name>
        <param><defname>fs</defname></param>
        <param><defname>page</defname></param>
        <initializer>( (page) % SPIFFS_PAGES_PER_BLOCK(fs) - SPIFFS_OBJ_LOOKUP_PAGES(fs) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="225" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a531964abe17c4436c83fd6df2fd3d675" prot="public" static="no">
        <name>SPIFFS_DATA_PAGE_SIZE</name>
        <param><defname>fs</defname></param>
        <initializer>( SPIFFS_CFG_LOG_PAGE_SZ(fs) - sizeof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="228" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ac521db24920cfea2cbd97bf251e16745" prot="public" static="no">
        <name>SPIFFS_ERASE_COUNT_PADDR</name>
        <param><defname>fs</defname></param>
        <param><defname>bix</defname></param>
        <initializer>( SPIFFS_BLOCK_TO_PADDR(fs, bix) + SPIFFS_OBJ_LOOKUP_PAGES(fs) * SPIFFS_CFG_LOG_PAGE_SZ(fs) - sizeof(spiffs_obj_id) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="232" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a47bf10870640678938eea75e3292405f" prot="public" static="no">
        <name>SPIFFS_MAGIC_PADDR</name>
        <param><defname>fs</defname></param>
        <param><defname>bix</defname></param>
        <initializer>( SPIFFS_BLOCK_TO_PADDR(fs, bix) + SPIFFS_OBJ_LOOKUP_PAGES(fs) * SPIFFS_CFG_LOG_PAGE_SZ(fs) - sizeof(spiffs_obj_id)*2 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="236" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1afd6167073c5fbc6d60b6f86f599a68df" prot="public" static="no">
        <name>SPIFFS_CHECK_MAGIC_POSSIBLE</name>
        <param><defname>fs</defname></param>
        <initializer>( (SPIFFS_OBJ_LOOKUP_MAX_ENTRIES(fs) % (SPIFFS_CFG_LOG_PAGE_SZ(fs)/sizeof(spiffs_obj_id))) * sizeof(spiffs_obj_id) \
    &lt;= (SPIFFS_CFG_LOG_PAGE_SZ(fs)-sizeof(spiffs_obj_id)*2) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="239" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a26502f63ced37ee122f4d3ee3fc93bfe" prot="public" static="no">
        <name>SPIFFS_OBJ_HDR_IX_LEN</name>
        <param><defname>fs</defname></param>
        <initializer>((SPIFFS_CFG_LOG_PAGE_SZ(fs) - sizeof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>))/sizeof(spiffs_page_ix))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="246" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a887258087767f2f0496be790715322e5" prot="public" static="no">
        <name>SPIFFS_OBJ_IX_LEN</name>
        <param><defname>fs</defname></param>
        <initializer>((SPIFFS_CFG_LOG_PAGE_SZ(fs) - sizeof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>))/sizeof(spiffs_page_ix))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="249" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a5bfc5e85427fd071d85fd33a7e7e24aa" prot="public" static="no">
        <name>SPIFFS_OBJ_IX_ENTRY</name>
        <param><defname>fs</defname></param>
        <param><defname>spix</defname></param>
        <initializer>((spix) &lt; SPIFFS_OBJ_HDR_IX_LEN(fs) ? (spix) : (((spix)-SPIFFS_OBJ_HDR_IX_LEN(fs))%SPIFFS_OBJ_IX_LEN(fs)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="252" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ad55a8e5f1caaa91879010ae674cd8bef" prot="public" static="no">
        <name>SPIFFS_OBJ_IX_ENTRY_SPAN_IX</name>
        <param><defname>fs</defname></param>
        <param><defname>spix</defname></param>
        <initializer>((spix) &lt; SPIFFS_OBJ_HDR_IX_LEN(fs) ? 0 : (1+((spix)-SPIFFS_OBJ_HDR_IX_LEN(fs))/SPIFFS_OBJ_IX_LEN(fs)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="255" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a2ab766900f93db3e180cc6d9e576ba61" prot="public" static="no">
        <name>SPIFFS_DATA_SPAN_IX_FOR_OBJ_IX_SPAN_IX</name>
        <param><defname>fs</defname></param>
        <param><defname>spix</defname></param>
        <initializer>( (spix) == 0 ? 0 : (SPIFFS_OBJ_HDR_IX_LEN(fs) + (((spix)-1) * SPIFFS_OBJ_IX_LEN(fs))) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="258" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a65188334b477da88ae7acc7bd439af68" prot="public" static="no">
        <name>SPIFFS_FH_OFFS</name>
        <param><defname>fs</defname></param>
        <param><defname>fh</defname></param>
        <initializer>(fh)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="265" column="10" bodyfile="src/spiffs_nucleus.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ae132583a276a7884cc506c947cd81b51" prot="public" static="no">
        <name>SPIFFS_FH_UNOFFS</name>
        <param><defname>fs</defname></param>
        <param><defname>fh</defname></param>
        <initializer>(fh)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="266" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ac6655499eb92c06aa83d2d31e96479a8" prot="public" static="no">
        <name>SPIFFS_OP_T_OBJ_LU</name>
        <initializer>(0&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="270" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a56c1e710599d63661234724cf9fe19db" prot="public" static="no">
        <name>SPIFFS_OP_T_OBJ_LU2</name>
        <initializer>(1&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="271" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a05b7a4d4215ed4a0b7e31a7e89a996b4" prot="public" static="no">
        <name>SPIFFS_OP_T_OBJ_IX</name>
        <initializer>(2&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="272" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a73c57a5d22390e390bce1d76ada36a20" prot="public" static="no">
        <name>SPIFFS_OP_T_OBJ_DA</name>
        <initializer>(3&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="273" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1adca6c3e62d607b70137950c2741237df" prot="public" static="no">
        <name>SPIFFS_OP_C_DELE</name>
        <initializer>(0&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="274" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4f25134b5e89882c14ddbcb7588a8872" prot="public" static="no">
        <name>SPIFFS_OP_C_UPDT</name>
        <initializer>(1&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="275" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1aaad7cd1e8ca35407c45bb902a56456d5" prot="public" static="no">
        <name>SPIFFS_OP_C_MOVS</name>
        <initializer>(2&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="276" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a9a95e8336200ca7246a56569f7a0adac" prot="public" static="no">
        <name>SPIFFS_OP_C_MOVD</name>
        <initializer>(3&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="277" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ae1bb4bba428cc1af88f0da35e8af9edf" prot="public" static="no">
        <name>SPIFFS_OP_C_FLSH</name>
        <initializer>(4&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="278" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a1b27e0c590d8b19a58eb796269c54d9b" prot="public" static="no">
        <name>SPIFFS_OP_C_READ</name>
        <initializer>(5&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="279" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1affa146a59d27d9d1c8237d0d056fa1d4" prot="public" static="no">
        <name>SPIFFS_OP_C_WRTHRU</name>
        <initializer>(6&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="280" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a81dac9545e4338dcfedd2a288501fa3c" prot="public" static="no">
        <name>SPIFFS_OP_TYPE_MASK</name>
        <initializer>(3&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="282" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4274282939f3be82bf71b0d0626d120e" prot="public" static="no">
        <name>SPIFFS_OP_COM_MASK</name>
        <initializer>(7&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="283" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ae54b1b19f46d2c6324070248e745b1e0" prot="public" static="no">
        <name>SPIFFS_PH_FLAG_USED</name>
        <initializer>(1&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="287" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1afdcced358810518ffbca401f7533e7e3" prot="public" static="no">
        <name>SPIFFS_PH_FLAG_FINAL</name>
        <initializer>(1&lt;&lt;1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="289" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ac5a494a4fe9407761775865b12ac8bfc" prot="public" static="no">
        <name>SPIFFS_PH_FLAG_INDEX</name>
        <initializer>(1&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="291" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1afadf38168704968f81a4547a74263cfc" prot="public" static="no">
        <name>SPIFFS_PH_FLAG_DELET</name>
        <initializer>(1&lt;&lt;7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="293" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a04a4ead270d73970b229644945578963" prot="public" static="no">
        <name>SPIFFS_PH_FLAG_IXDELE</name>
        <initializer>(1&lt;&lt;6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="295" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a0f1cab1b3dec6afe13d1dca52b975297" prot="public" static="no">
        <name>SPIFFS_CHECK_MOUNT</name>
        <param><defname>fs</defname></param>
        <initializer>((fs)-&gt;mounted != 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="298" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1aeff5476247546a0c95bd7d9c9034f00d" prot="public" static="no">
        <name>SPIFFS_CHECK_CFG</name>
        <param><defname>fs</defname></param>
        <initializer>((fs)-&gt;config_magic == SPIFFS_CONFIG_MAGIC)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="301" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a55c1b38095310a747f20761a525793cc" prot="public" static="no">
        <name>SPIFFS_CHECK_RES</name>
        <param><defname>res</defname></param>
        <initializer>do { \
    if ((res) &lt; SPIFFS_OK) return (res); \
  } while (0);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="304" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a5a31198dcf433ccb71f63447c4cb3dd0" prot="public" static="no">
        <name>SPIFFS_API_CHECK_MOUNT</name>
        <param><defname>fs</defname></param>
        <initializer>if (!SPIFFS_CHECK_MOUNT((fs))) { \
    (fs)-&gt;err_code = SPIFFS_ERR_NOT_MOUNTED; \
    return SPIFFS_ERR_NOT_MOUNTED; \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="309" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ac3a8a7e9c80819498f4d467a84513466" prot="public" static="no">
        <name>SPIFFS_API_CHECK_CFG</name>
        <param><defname>fs</defname></param>
        <initializer>if (!SPIFFS_CHECK_CFG((fs))) { \
    (fs)-&gt;err_code = SPIFFS_ERR_NOT_CONFIGURED; \
    return SPIFFS_ERR_NOT_CONFIGURED; \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="315" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a73eb532708b2d8d6102a741d8efb92f0" prot="public" static="no">
        <name>SPIFFS_API_CHECK_RES</name>
        <param><defname>fs</defname></param>
        <param><defname>res</defname></param>
        <initializer>if ((res) &lt; SPIFFS_OK) { \
    (fs)-&gt;err_code = (res); \
    return (res); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="321" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ad65105b352bbbbdca712d2a7495e2a86" prot="public" static="no">
        <name>SPIFFS_API_CHECK_RES_UNLOCK</name>
        <param><defname>fs</defname></param>
        <param><defname>res</defname></param>
        <initializer>if ((res) &lt; SPIFFS_OK) { \
    (fs)-&gt;err_code = (res); \
    SPIFFS_UNLOCK(fs); \
    return (res); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="327" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a487cd0dac7e9d284e32c01cdf6853376" prot="public" static="no">
        <name>SPIFFS_VALIDATE_OBJIX</name>
        <param><defname>ph</defname></param>
        <param><defname>objid</defname></param>
        <param><defname>spix</defname></param>
        <initializer>if (((ph).flags &amp; SPIFFS_PH_FLAG_USED) != 0) return SPIFFS_ERR_IS_FREE; \
    if (((ph).flags &amp; SPIFFS_PH_FLAG_DELET) == 0) return SPIFFS_ERR_DELETED; \
    if (((ph).flags &amp; SPIFFS_PH_FLAG_FINAL) != 0) return SPIFFS_ERR_NOT_FINALIZED; \
    if (((ph).flags &amp; SPIFFS_PH_FLAG_INDEX) != 0) return SPIFFS_ERR_NOT_INDEX; \
    if (((objid) &amp; SPIFFS_OBJ_ID_IX_FLAG) == 0) return SPIFFS_ERR_NOT_INDEX; \
    if ((ph).span_ix != (spix)) return SPIFFS_ERR_INDEX_SPAN_MISMATCH;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="334" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ad482dd67e2666b6c3a1760d23f818378" prot="public" static="no">
        <name>SPIFFS_VALIDATE_DATA</name>
        <param><defname>ph</defname></param>
        <param><defname>objid</defname></param>
        <param><defname>spix</defname></param>
        <initializer>if (((ph).flags &amp; SPIFFS_PH_FLAG_USED) != 0) return SPIFFS_ERR_IS_FREE; \
    if (((ph).flags &amp; SPIFFS_PH_FLAG_DELET) == 0) return SPIFFS_ERR_DELETED; \
    if (((ph).flags &amp; SPIFFS_PH_FLAG_FINAL) != 0) return SPIFFS_ERR_NOT_FINALIZED; \
    if (((ph).flags &amp; SPIFFS_PH_FLAG_INDEX) == 0) return SPIFFS_ERR_IS_INDEX; \
    if ((objid) &amp; SPIFFS_OBJ_ID_IX_FLAG) return SPIFFS_ERR_IS_INDEX; \
    if ((ph).span_ix != (spix)) return SPIFFS_ERR_DATA_SPAN_MISMATCH;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="343" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ae3cbe3d650d00a3a7d738d26923de4e5" prot="public" static="no">
        <name>SPIFFS_VIS_CHECK_ID</name>
        <initializer>(1&lt;&lt;0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="353" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a38b6adfdb20c7b0c54943e1b2961e117" prot="public" static="no">
        <name>SPIFFS_VIS_CHECK_PH</name>
        <initializer>(1&lt;&lt;1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="355" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4f08cb39212d909a350e577506b535d7" prot="public" static="no">
        <name>SPIFFS_VIS_NO_WRAP</name>
        <initializer>(1&lt;&lt;2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="357" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1ad1c1f0dcec22712e8577f7162d947d60" prot="public" static="no">
        <name>SPIFFS_HAL_WRITE</name>
        <param><defname>_fs</defname></param>
        <param><defname>_paddr</defname></param>
        <param><defname>_len</defname></param>
        <param><defname>_src</defname></param>
        <initializer>(_fs)-&gt;cfg.hal_write_f((_paddr), (_len), (_src))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="370" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a3aac2a252c44ee872affe9fc15b96d24" prot="public" static="no">
        <name>SPIFFS_HAL_READ</name>
        <param><defname>_fs</defname></param>
        <param><defname>_paddr</defname></param>
        <param><defname>_len</defname></param>
        <param><defname>_dst</defname></param>
        <initializer>(_fs)-&gt;cfg.hal_read_f((_paddr), (_len), (_dst))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="372" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a2272a8b991e602cd9632a95e868d7d11" prot="public" static="no">
        <name>SPIFFS_HAL_ERASE</name>
        <param><defname>_fs</defname></param>
        <param><defname>_paddr</defname></param>
        <param><defname>_len</defname></param>
        <initializer>(_fs)-&gt;cfg.hal_erase_f((_paddr), (_len))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="374" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1add749a5d80cd33ceb1ec8f0bd1350ecf" prot="public" static="no">
        <name>_spiffs_rd</name>
        <param><defname>fs</defname></param>
        <param><defname>op</defname></param>
        <param><defname>fh</defname></param>
        <param><defname>addr</defname></param>
        <param><defname>len</defname></param>
        <param><defname>dst</defname></param>
        <initializer>spiffs_phys_rd((fs), (addr), (len), (dst))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="531" column="10" bodyfile="src/spiffs_nucleus.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a5f9bc67bccb106cc8dec5cd97c393d58" prot="public" static="no">
        <name>_spiffs_wr</name>
        <param><defname>fs</defname></param>
        <param><defname>op</defname></param>
        <param><defname>fh</defname></param>
        <param><defname>addr</defname></param>
        <param><defname>len</defname></param>
        <param><defname>src</defname></param>
        <initializer>spiffs_phys_wr((fs), (addr), (len), (src))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="533" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &lt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="538" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" prot="public" static="no">
        <name>MAX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &gt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="541" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="spiffs__nucleus_8h_1a4b5f680f6cf143172bae0aa49ee70ec5" prot="public" static="no">
        <name>_SPIFFS_MEMCPY</name>
        <param><defname>__d</defname></param>
        <param><defname>__s</defname></param>
        <param><defname>__l</defname></param>
        <initializer>do{memcpy((__d),(__s),(__l));}while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="838" column="9" bodyfile="src/spiffs_nucleus.h" bodystart="838" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="spiffs__nucleus_8h_1a44f2b3e3a44188713b1753481e482aec" prot="public" static="no">
        <type>struct <ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">SPIFFS_PACKED</ref></type>
        <definition>typedef struct SPIFFS_PACKED  spiffs_page_header</definition>
        <argsstring></argsstring>
        <name>spiffs_page_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="490" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="spiffs__nucleus_8h_1abd8c2335b6c7ff20f2657597b08091d0" prot="public" static="no">
        <type>struct <ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">SPIFFS_PACKED</ref></type>
        <definition>typedef struct SPIFFS_PACKED  spiffs_page_object_ix_header</definition>
        <argsstring></argsstring>
        <name>spiffs_page_object_ix_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="512" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="spiffs__nucleus_8h_1a8ecf90f4ee6c07eb3b33a94f78708fdd" prot="public" static="no">
        <type>struct <ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">SPIFFS_PACKED</ref></type>
        <definition>typedef struct SPIFFS_PACKED  spiffs_page_object_ix</definition>
        <argsstring></argsstring>
        <name>spiffs_page_object_ix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="518" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="spiffs__nucleus_8h_1a27383b96ae4f0c1a3114dfe5562e7909" prot="public" static="no">
        <type>s32_t(*</type>
        <definition>typedef s32_t(* spiffs_visitor_f) (spiffs *fs, spiffs_obj_id id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</definition>
        <argsstring>)(spiffs *fs, spiffs_obj_id id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</argsstring>
        <name>spiffs_visitor_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="521" column="1" bodyfile="src/spiffs_nucleus.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="spiffs__nucleus_8h_1a15518d9a3874d70534d5613c81c9eeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_phys_rd</definition>
        <argsstring>(spiffs *fs, u32_t addr, u32_t len, u8_t *dst)</argsstring>
        <name>spiffs_phys_rd</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ab54a74f421b9c3e65c5f42ab5eb4d363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_phys_wr</definition>
        <argsstring>(spiffs *fs, u32_t addr, u32_t len, u8_t *src)</argsstring>
        <name>spiffs_phys_wr</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a7caac7b832eb7013058cc4cf8b5e1c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_phys_cpy</definition>
        <argsstring>(spiffs *fs, spiffs_file fh, u32_t dst, u32_t src, u32_t len)</argsstring>
        <name>spiffs_phys_cpy</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="566" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="83" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ad0d62f271750e4d1bf72b20708e4da46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_phys_count_free_blocks</definition>
        <argsstring>(spiffs *fs)</argsstring>
        <name>spiffs_phys_count_free_blocks</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="573" column="1"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1aec3d4ab5d5b920deb4beb731ad9f0406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_entry_visitor</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, u8_t flags, spiffs_obj_id obj_id, spiffs_visitor_f v, const void *user_const_p, void *user_var_p, spiffs_block_ix *block_ix, int *lu_entry)</argsstring>
        <name>spiffs_obj_lu_find_entry_visitor</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>starting_block</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starting_lu_entry</declname>
        </param>
        <param>
          <type>u8_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_visitor_f</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <param>
          <type>spiffs_block_ix *</type>
          <declname>block_ix</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lu_entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="576" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="124" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ae5780e3c0f5cc784e3a8c44e854f030f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_erase_block</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix bix)</argsstring>
        <name>spiffs_erase_block</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="588" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="226" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a9d653fcca42282dd6d032c153fc0f4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_scan</definition>
        <argsstring>(spiffs *fs)</argsstring>
        <name>spiffs_obj_lu_scan</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="599" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="348" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a9d5b32825c34637fbc24f996e1cf065d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_free_obj_id</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id *obj_id, const u8_t *conflicting_name)</argsstring>
        <name>spiffs_obj_lu_find_free_obj_id</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id *</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>const u8_t *</type>
          <declname>conflicting_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="602" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2133" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a0c1b9246d8e3de063576a5a6a95d1781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_free</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_block_ix *block_ix, int *lu_entry)</argsstring>
        <name>spiffs_obj_lu_find_free</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>starting_block</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starting_lu_entry</declname>
        </param>
        <param>
          <type>spiffs_block_ix *</type>
          <declname>block_ix</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lu_entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="607" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="449" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a42478252c59173e13b8cbdf3d23103a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_id</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_obj_id obj_id, spiffs_block_ix *block_ix, int *lu_entry)</argsstring>
        <name>spiffs_obj_lu_find_id</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>starting_block</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starting_lu_entry</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_block_ix *</type>
          <declname>block_ix</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lu_entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="614" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="485" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a71e771fdce40e52d75dc207a474558c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_id_and_span</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)</argsstring>
        <name>spiffs_obj_lu_find_id_and_span</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>exclusion_pix</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="622" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="527" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ad04d186a13165e49470f4691e304c1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_id_and_span_by_phdr</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)</argsstring>
        <name>spiffs_obj_lu_find_id_and_span_by_phdr</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>exclusion_pix</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="629" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="566" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a7c2b33a8db528e8f6feebd6f40cc4208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_page_allocate_data</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_page_header *ph, u8_t *data, u32_t len, u32_t page_offs, u8_t finalize, spiffs_page_ix *pix)</argsstring>
        <name>spiffs_page_allocate_data</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>page_offs</declname>
        </param>
        <param>
          <type>u8_t</type>
          <declname>finalize</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="638" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="753" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a4418c46c45673ca0bad11a9da6b4d006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_page_move</definition>
        <argsstring>(spiffs *fs, spiffs_file fh, u8_t *page_data, spiffs_obj_id obj_id, spiffs_page_header *page_hdr, spiffs_page_ix src_pix, spiffs_page_ix *dst_pix)</argsstring>
        <name>spiffs_page_move</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>page_data</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref> *</type>
          <declname>page_hdr</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>src_pix</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>dst_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="648" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="812" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1aa564f933c972a2d2b08bb37fea37fba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_page_delete</definition>
        <argsstring>(spiffs *fs, spiffs_page_ix pix)</argsstring>
        <name>spiffs_page_delete</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="657" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="876" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1af02f56832ef3b0eb65040f4c45bb0add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_create</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, const u8_t name[], const u8_t meta[], spiffs_obj_type type, spiffs_page_ix *objix_hdr_pix)</argsstring>
        <name>spiffs_object_create</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>meta</declname>
          <array>[]</array>
        </param>
        <param>
          <type>spiffs_obj_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>objix_hdr_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="663" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="912" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a548c33b05ccf120a3e191b42998c6d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_update_index_hdr</definition>
        <argsstring>(spiffs *fs, spiffs_fd *fd, spiffs_obj_id obj_id, spiffs_page_ix objix_hdr_pix, u8_t *new_objix_hdr_data, const u8_t name[], const u8_t meta[], u32_t size, spiffs_page_ix *new_pix)</argsstring>
        <name>spiffs_object_update_index_hdr</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>objix_hdr_pix</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>new_objix_hdr_data</declname>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>meta</declname>
          <array>[]</array>
        </param>
        <param>
          <type>u32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>new_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="671" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="979" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1af6f0bd67fec8a0b8047db5255a9febb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spiffs_cb_object_event</definition>
        <argsstring>(spiffs *fs, spiffs_page_object_ix *objix, int ev, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix new_pix, u32_t new_size)</argsstring>
        <name>spiffs_cb_object_event</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref> *</type>
          <declname>objix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>new_pix</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="692" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1041" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ac4d9a6b6d693e982efd9bbf60f1d9975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_open_by_id</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_fd *f, spiffs_flags flags, spiffs_mode mode)</argsstring>
        <name>spiffs_object_open_by_id</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>spiffs_flags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>spiffs_mode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="701" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1154" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1aeb942f38704f37e2a5aec0cd810787ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_open_by_page</definition>
        <argsstring>(spiffs *fs, spiffs_page_ix pix, spiffs_fd *f, spiffs_flags flags, spiffs_mode mode)</argsstring>
        <name>spiffs_object_open_by_page</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>pix</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>spiffs_flags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>spiffs_mode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="708" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1172" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1adc3eddb2989d45c22cf541648375010b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_append</definition>
        <argsstring>(spiffs_fd *fd, u32_t offset, u8_t *data, u32_t len)</argsstring>
        <name>spiffs_object_append</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="715" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1212" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a2dac840a00c2fc3f00ee53e39f13023e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_modify</definition>
        <argsstring>(spiffs_fd *fd, u32_t offset, u8_t *data, u32_t len)</argsstring>
        <name>spiffs_object_modify</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="721" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1459" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ac880d8a477ca6a26de68d6372ca9c3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_read</definition>
        <argsstring>(spiffs_fd *fd, u32_t offset, u32_t len, u8_t *dst)</argsstring>
        <name>spiffs_object_read</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="727" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1966" bodyend="2056"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ae932d49db814e31af543a33b359e45b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_truncate</definition>
        <argsstring>(spiffs_fd *fd, u32_t new_len, u8_t remove_object)</argsstring>
        <name>spiffs_object_truncate</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>new_len</declname>
        </param>
        <param>
          <type>u8_t</type>
          <declname>remove_object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="733" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1727" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a31212be98ef82ec80a9211a5045ed435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_find_object_index_header_by_name</definition>
        <argsstring>(spiffs *fs, const u8_t name[SPIFFS_OBJ_NAME_LEN], spiffs_page_ix *pix)</argsstring>
        <name>spiffs_object_find_object_index_header_by_name</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>name</declname>
          <array>[SPIFFS_OBJ_NAME_LEN]</array>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="738" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1691" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a48a3380fede0173843710398a9903f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_gc_check</definition>
        <argsstring>(spiffs *fs, u32_t len)</argsstring>
        <name>spiffs_gc_check</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="745" column="1" bodyfile="src/spiffs_gc.c" bodystart="109" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1aa5ac0f00dd87f3459b649b92ab1a72b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_gc_erase_page_stats</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix bix)</argsstring>
        <name>spiffs_gc_erase_page_stats</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="749" column="1" bodyfile="src/spiffs_gc.c" bodystart="199" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a1d47784c593785528b5ecc5062cee26c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_gc_find_candidate</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix **block_candidate, int *candidate_count, char fs_crammed)</argsstring>
        <name>spiffs_gc_find_candidate</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix **</type>
          <declname>block_candidate</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>candidate_count</declname>
        </param>
        <param>
          <type>char</type>
          <declname>fs_crammed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="753" column="1" bodyfile="src/spiffs_gc.c" bodystart="236" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a048c2333e7675c8f23d1916fb0f565b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_gc_clean</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix bix)</argsstring>
        <name>spiffs_gc_clean</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="759" column="1" bodyfile="src/spiffs_gc.c" bodystart="377" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ac669c2ab17e2e620b8cf7668bba31775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_gc_quick</definition>
        <argsstring>(spiffs *fs, u16_t max_free_pages)</argsstring>
        <name>spiffs_gc_quick</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>u16_t</type>
          <declname>max_free_pages</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="763" column="1" bodyfile="src/spiffs_gc.c" bodystart="32" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a46fe490d99acc1d3d422d451b0c98d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_fd_find_new</definition>
        <argsstring>(spiffs *fs, spiffs_fd **fd, const char *name)</argsstring>
        <name>spiffs_fd_find_new</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> **</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="768" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2242" bodyend="2318"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1ac920b55d407430310cfa0b02785453d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_fd_return</definition>
        <argsstring>(spiffs *fs, spiffs_file f)</argsstring>
        <name>spiffs_fd_return</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="773" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2320" bodyend="2334"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a308e4c2ab049ad6e7c97848a1a59bfbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_fd_get</definition>
        <argsstring>(spiffs *fs, spiffs_file f, spiffs_fd **fd)</argsstring>
        <name>spiffs_fd_get</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> **</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="777" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2336" bodyend="2346"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a3f488fe8101c803607656ab9ff0aade4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_lookup_consistency_check</definition>
        <argsstring>(spiffs *fs, u8_t check_all_objects)</argsstring>
        <name>spiffs_lookup_consistency_check</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>u8_t</type>
          <declname>check_all_objects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="812" column="1" bodyfile="src/spiffs_check.c" bodystart="488" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1afb9525c13d8a2ace7f03506874d42a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_page_consistency_check</definition>
        <argsstring>(spiffs *fs)</argsstring>
        <name>spiffs_page_consistency_check</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="816" column="1" bodyfile="src/spiffs_check.c" bodystart="864" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8h_1a87dab27c3e2cf4ce8935e050b14b3d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_index_consistency_check</definition>
        <argsstring>(spiffs *fs)</argsstring>
        <name>spiffs_object_index_consistency_check</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.h" line="819" column="1" bodyfile="src/spiffs_check.c" bodystart="986" bodyend="1006"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>spiffs_nucleus.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Jun<sp/>15,<sp/>2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>petera</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SPIFFS<sp/>layout</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>spiffs<sp/>is<sp/>designed<sp/>for<sp/>following<sp/>spi<sp/>flash<sp/>characteristics:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>only<sp/>big<sp/>areas<sp/>of<sp/>data<sp/>(blocks)<sp/>can<sp/>be<sp/>erased</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>erasing<sp/>resets<sp/>all<sp/>bits<sp/>in<sp/>a<sp/>block<sp/>to<sp/>ones</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>writing<sp/>pulls<sp/>ones<sp/>to<sp/>zeroes</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>zeroes<sp/>cannot<sp/>be<sp/>pulled<sp/>to<sp/>ones,<sp/>without<sp/>erase</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>-<sp/>wear<sp/>leveling</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>spiffs<sp/>is<sp/>also<sp/>meant<sp/>to<sp/>be<sp/>run<sp/>on<sp/>embedded,<sp/>memory<sp/>constraint<sp/>devices.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Entire<sp/>area<sp/>is<sp/>divided<sp/>in<sp/>blocks.<sp/>Entire<sp/>area<sp/>is<sp/>also<sp/>divided<sp/>in<sp/>pages.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Each<sp/>block<sp/>contains<sp/>same<sp/>number<sp/>of<sp/>pages.<sp/>A<sp/>page<sp/>cannot<sp/>be<sp/>erased,<sp/>but<sp/>a</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>block<sp/>can<sp/>be<sp/>erased.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Entire<sp/>area<sp/>must<sp/>be<sp/>block_size<sp/>*<sp/>x</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>page_size<sp/>must<sp/>be<sp/>block_size<sp/>/<sp/>(2^y)<sp/>where<sp/>y<sp/>&gt;<sp/>2</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>ex:<sp/>area<sp/>=<sp/>1024*1024<sp/>bytes,<sp/>block<sp/>size<sp/>=<sp/>65536<sp/>bytes,<sp/>page<sp/>size<sp/>=<sp/>256<sp/>bytes</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>BLOCK<sp/>0<sp/><sp/>PAGE<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>lookup<sp/>1</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>lookup<sp/>2</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>n-1<sp/><sp/><sp/><sp/><sp/>object<sp/>lookup<sp/>n</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>data<sp/>1</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>n+1<sp/><sp/><sp/><sp/><sp/>object<sp/>data<sp/>2</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>n+m-1<sp/><sp/><sp/>object<sp/>data<sp/>m</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>BLOCK<sp/>1<sp/><sp/>PAGE<sp/>n+m<sp/><sp/><sp/><sp/><sp/>object<sp/>lookup<sp/>1</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>n+m+1<sp/><sp/><sp/>object<sp/>lookup<sp/>2</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>2n+m-1<sp/><sp/>object<sp/>lookup<sp/>n</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>2n+m<sp/><sp/><sp/><sp/>object<sp/>data<sp/>1</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>2n+m<sp/><sp/><sp/><sp/>object<sp/>data<sp/>2</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PAGE<sp/>2n+2m-1<sp/>object<sp/>data<sp/>m</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>...</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>n<sp/>is<sp/>number<sp/>of<sp/>object<sp/>lookup<sp/>pages,<sp/>which<sp/>is<sp/>number<sp/>of<sp/>pages<sp/>needed<sp/>to<sp/>index<sp/>all<sp/>pages</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>in<sp/>a<sp/>block<sp/>by<sp/>object<sp/>id</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:<sp/>block_size<sp/>/<sp/>page_size<sp/>*<sp/>sizeof(obj_id)<sp/>/<sp/>page_size</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>m<sp/>is<sp/>number<sp/>data<sp/>pages,<sp/>which<sp/>is<sp/>number<sp/>of<sp/>pages<sp/>in<sp/>block<sp/>minus<sp/>number<sp/>of<sp/>lookup<sp/>pages</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:<sp/>block_size<sp/>/<sp/>page_size<sp/>-<sp/>block_size<sp/>/<sp/>page_size<sp/>*<sp/>sizeof(obj_id)<sp/>/<sp/>page_size</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>thus,<sp/>n+m<sp/>is<sp/>total<sp/>number<sp/>of<sp/>pages<sp/>in<sp/>a<sp/>block</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:<sp/>block_size<sp/>/<sp/>page_size</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>ex:<sp/>n<sp/>=<sp/>65536/256*2/256<sp/>=<sp/>2,<sp/>m<sp/>=<sp/>65536/256<sp/>-<sp/>2<sp/>=<sp/>254<sp/>=&gt;<sp/>n+m<sp/>=<sp/>65536/256<sp/>=<sp/>256</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Object<sp/>lookup<sp/>pages<sp/>contain<sp/>object<sp/>id<sp/>entries.<sp/>Each<sp/>entry<sp/>represent<sp/>the<sp/>corresponding</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>data<sp/>page.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>Assuming<sp/>a<sp/>16<sp/>bit<sp/>object<sp/>id,<sp/>an<sp/>object<sp/>id<sp/>being<sp/>0xffff<sp/>represents<sp/>a<sp/>free<sp/>page.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>An<sp/>object<sp/>id<sp/>being<sp/>0x0000<sp/>represents<sp/>a<sp/>deleted<sp/>page.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>ex:<sp/>page<sp/>0<sp/>:<sp/>lookup<sp/>:<sp/>0008<sp/>0001<sp/>0aaa<sp/>ffff<sp/>ffff<sp/>ffff<sp/>ffff<sp/>ffff<sp/>..</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>page<sp/>1<sp/>:<sp/>lookup<sp/>:<sp/>ffff<sp/>ffff<sp/>ffff<sp/>ffff<sp/>ffff<sp/>ffff<sp/>ffff<sp/>ffff<sp/>..</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>page<sp/>2<sp/>:<sp/>data<sp/><sp/><sp/>:<sp/>data<sp/>for<sp/>object<sp/>id<sp/>0008</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>page<sp/>3<sp/>:<sp/>data<sp/><sp/><sp/>:<sp/>data<sp/>for<sp/>object<sp/>id<sp/>0001</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>page<sp/>4<sp/>:<sp/>data<sp/><sp/><sp/>:<sp/>data<sp/>for<sp/>object<sp/>id<sp/>0aaa</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>Object<sp/>data<sp/>pages<sp/>can<sp/>be<sp/>either<sp/>object<sp/>index<sp/>pages<sp/>or<sp/>object<sp/>content.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>All<sp/>object<sp/>data<sp/>pages<sp/>contains<sp/>a<sp/>data<sp/>page<sp/>header,<sp/>containing<sp/>object<sp/>id<sp/>and<sp/>span<sp/>index.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>The<sp/>span<sp/>index<sp/>denotes<sp/>the<sp/>object<sp/>page<sp/>ordering<sp/>amongst<sp/>data<sp/>pages<sp/>with<sp/>same<sp/>object<sp/>id.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>This<sp/>applies<sp/>to<sp/>both<sp/>object<sp/>index<sp/>pages<sp/>(when<sp/>index<sp/>spans<sp/>more<sp/>than<sp/>one<sp/>page<sp/>of<sp/>entries),</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>and<sp/>object<sp/>data<sp/>pages.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>An<sp/>object<sp/>index<sp/>page<sp/>contains<sp/>page<sp/>entries<sp/>pointing<sp/>to<sp/>object<sp/>content<sp/>page.<sp/>The<sp/>entry<sp/>index</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>in<sp/>a<sp/>object<sp/>index<sp/>page<sp/>correlates<sp/>to<sp/>the<sp/>span<sp/>index<sp/>in<sp/>the<sp/>actual<sp/>object<sp/>data<sp/>page.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>object<sp/>index<sp/>page<sp/>(span<sp/>index<sp/>0)<sp/>is<sp/>called<sp/>object<sp/>index<sp/>header<sp/>page,<sp/>and<sp/>also</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>contains<sp/>object<sp/>flags<sp/>(directory/file),<sp/>size,<sp/>object<sp/>name<sp/>etc.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>ex:</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/>BLOCK<sp/>1</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>256:<sp/>objectl<sp/>lookup<sp/>page<sp/>1</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>[*123]<sp/>[<sp/>123]<sp/>[<sp/>123]<sp/>[<sp/>123]</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>[<sp/>123]<sp/>[*123]<sp/>[<sp/>123]<sp/>[<sp/>123]</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>[free]<sp/>[free]<sp/>[free]<sp/>[free]<sp/>...</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>257:<sp/>objectl<sp/>lookup<sp/>page<sp/>2</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>[free]<sp/>[free]<sp/>[free]<sp/>[free]<sp/>...</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>258:<sp/>object<sp/>index<sp/>page<sp/>(header)</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0000<sp/>flags:INDEX</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>size:1600<sp/>name:ex.txt<sp/>type:file</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>[259]<sp/>[260]<sp/>[261]<sp/>[262]</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>259:<sp/>object<sp/>data<sp/>page</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0000<sp/>flags:DATA</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>260:<sp/>object<sp/>data<sp/>page</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0001<sp/>flags:DATA</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>261:<sp/>object<sp/>data<sp/>page</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0002<sp/>flags:DATA</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>262:<sp/>object<sp/>data<sp/>page</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0003<sp/>flags:DATA</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>263:<sp/>object<sp/>index<sp/>page</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0001<sp/>flags:INDEX</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>[264]<sp/>[265]<sp/>[fre]<sp/>[fre]</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>[fre]<sp/>[fre]<sp/>[fre]<sp/>[fre]</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>264:<sp/>object<sp/>data<sp/>page</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0004<sp/>flags:DATA</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>PAGE<sp/>265:<sp/>object<sp/>data<sp/>page</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>obj.id:0123<sp/>span.ix:0005<sp/>flags:DATA</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPIFFS_NUCLEUS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_NUCLEUS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SPIFFS_ERR_CHECK_FIRST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_ERR_CHECK_OBJ_ID_MISM<sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_ERR_CHECK_SPIX_MISM<sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_ERR_CHECK_FLAGS_BAD<sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SPIFFS_ERR_CHECK_LAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>visitor<sp/>result,<sp/>continue<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VIS_COUNTINUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>visitor<sp/>result,<sp/>continue<sp/>searching<sp/>after<sp/>reloading<sp/>lu<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VIS_COUNTINUE_RELOAD<sp/><sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>21)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>visitor<sp/>result,<sp/>stop<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VIS_END<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_ERR_INTERNAL<sp/>-<sp/>22)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>updating<sp/>an<sp/>object<sp/>index<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_EV_IX_UPD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>creating<sp/>a<sp/>new<sp/>object<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_EV_IX_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>deleting<sp/>an<sp/>object<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_EV_IX_DEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>moving<sp/>an<sp/>object<sp/>index<sp/>without<sp/>updating<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_EV_IX_MOV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>updating<sp/>an<sp/>object<sp/>index<sp/>header<sp/>data<sp/>only,<sp/>not<sp/>the<sp/>table<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_EV_IX_UPD_HDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_ID_IX_FLAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_obj_id)(1&lt;&lt;(8*sizeof(spiffs_obj_id)-1)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_UNDEFINED_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u32_t)(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_ID_DELETED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_obj_id)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_ID_FREE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_obj_id)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(__clang__)<sp/>||<sp/>defined(__TI_COMPILER_VERSION__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>GCC,<sp/>clang<sp/>and<sp/>TI<sp/>compilers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PACKED<sp/>__attribute__((packed))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ICCARM__)<sp/>||<sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>IAR<sp/>ARM<sp/>and<sp/>Keil<sp/>MDK-ARM<sp/>compilers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PACKED<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unknown<sp/>compiler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PACKED<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_USE_MAGIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_USE_MAGIC_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_MAGIC(fs,<sp/>bix)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/>((spiffs_obj_id)(0x20140529<sp/>^<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>SPIFFS_USE_MAGIC_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_MAGIC(fs,<sp/>bix)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/>((spiffs_obj_id)(0x20140529<sp/>^<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>^<sp/>((fs)-&gt;block_count<sp/>-<sp/>(bix))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SPIFFS_USE_MAGIC_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SPIFFS_USE_MAGIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CONFIG_MAGIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x20090315)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_SINGLETON<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/>((fs)-&gt;cfg.log_page_size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CFG_LOG_BLOCK_SZ(fs)<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/>((fs)-&gt;cfg.log_block_size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CFG_PHYS_SZ(fs)<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/>((fs)-&gt;cfg.phys_size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CFG_PHYS_ERASE_SZ(fs)<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/>((fs)-&gt;cfg.phys_erase_block)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CFG_PHYS_ADDR(fs)<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/>((fs)-&gt;cfg.phys_addr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>total<sp/>number<sp/>of<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_MAX_PAGES(fs)<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/>(<sp/>SPIFFS_CFG_PHYS_SZ(fs)/SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>total<sp/>number<sp/>of<sp/>pages<sp/>per<sp/>block,<sp/>including<sp/>object<sp/>lookup<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PAGES_PER_BLOCK(fs)<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/>(<sp/>SPIFFS_CFG_LOG_BLOCK_SZ(fs)/SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>object<sp/>lookup<sp/>pages<sp/>per<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_LOOKUP_PAGES(fs)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/>(MAX(1,<sp/>(SPIFFS_PAGES_PER_BLOCK(fs)<sp/>*<sp/>sizeof(spiffs_obj_id))<sp/>/<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs))<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>checks<sp/>if<sp/>page<sp/>index<sp/>belongs<sp/>to<sp/>object<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_IS_LOOKUP_PAGE(fs,pix)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/>(((pix)<sp/>%<sp/>SPIFFS_PAGES_PER_BLOCK(fs))<sp/>&lt;<sp/>SPIFFS_OBJ_LOOKUP_PAGES(fs))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>object<sp/>lookup<sp/>entries<sp/>in<sp/>all<sp/>object<sp/>lookup<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_LOOKUP_MAX_ENTRIES(fs)<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/>(SPIFFS_PAGES_PER_BLOCK(fs)-SPIFFS_OBJ_LOOKUP_PAGES(fs))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>a<sp/>block<sp/>to<sp/>physical<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>block)<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/>(<sp/>SPIFFS_CFG_PHYS_ADDR(fs)<sp/>+<sp/>(block)*<sp/>SPIFFS_CFG_LOG_BLOCK_SZ(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>a<sp/>object<sp/>lookup<sp/>entry<sp/>to<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>block,<sp/>entry)<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/>((block)*SPIFFS_PAGES_PER_BLOCK(fs)<sp/>+<sp/>(SPIFFS_OBJ_LOOKUP_PAGES(fs)<sp/>+<sp/>entry))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>a<sp/>object<sp/>lookup<sp/>entry<sp/>to<sp/>physical<sp/>address<sp/>of<sp/>corresponding<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PADDR(fs,<sp/>block,<sp/>entry)<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/>(SPIFFS_BLOCK_TO_PADDR(fs,<sp/>block)<sp/>+<sp/>(SPIFFS_OBJ_LOOKUP_PAGES(fs)<sp/>+<sp/>entry)<sp/>*<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>a<sp/>page<sp/>to<sp/>physical<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>page)<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/>(<sp/>SPIFFS_CFG_PHYS_ADDR(fs)<sp/>+<sp/>(page)<sp/>*<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>a<sp/>physical<sp/>address<sp/>to<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PADDR_TO_PAGE(fs,<sp/>addr)<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/>(<sp/>((addr)<sp/>-<sp/><sp/>SPIFFS_CFG_PHYS_ADDR(fs))<sp/>/<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gives<sp/>index<sp/>in<sp/>page<sp/>for<sp/>a<sp/>physical<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PADDR_TO_PAGE_OFFSET(fs,<sp/>addr)<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/>(<sp/>((addr)<sp/>-<sp/>SPIFFS_CFG_PHYS_ADDR(fs))<sp/>%<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>containing<sp/>block<sp/>for<sp/>given<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_BLOCK_FOR_PAGE(fs,<sp/>page)<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/>(<sp/>(page)<sp/>/<sp/>SPIFFS_PAGES_PER_BLOCK(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>starting<sp/>page<sp/>for<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PAGE_FOR_BLOCK(fs,<sp/>block)<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/>(<sp/>(block)<sp/>*<sp/>SPIFFS_PAGES_PER_BLOCK(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>page<sp/>to<sp/>entry<sp/>in<sp/>object<sp/>lookup<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE(fs,<sp/>page)<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/>(<sp/>(page)<sp/>%<sp/>SPIFFS_PAGES_PER_BLOCK(fs)<sp/>-<sp/>SPIFFS_OBJ_LOOKUP_PAGES(fs)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>data<sp/>size<sp/>in<sp/>a<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>-<sp/>sizeof(spiffs_page_header)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>physical<sp/>address<sp/>for<sp/>block&apos;s<sp/>erase<sp/>count,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>always<sp/>in<sp/>the<sp/>physical<sp/>last<sp/>entry<sp/>of<sp/>the<sp/>last<sp/>object<sp/>lookup<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_ERASE_COUNT_PADDR(fs,<sp/>bix)<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/>(<sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>bix)<sp/>+<sp/>SPIFFS_OBJ_LOOKUP_PAGES(fs)<sp/>*<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>-<sp/>sizeof(spiffs_obj_id)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>physical<sp/>address<sp/>for<sp/>block&apos;s<sp/>magic,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>always<sp/>in<sp/>the<sp/>physical<sp/>second<sp/>last<sp/>entry<sp/>of<sp/>the<sp/>last<sp/>object<sp/>lookup<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_MAGIC_PADDR(fs,<sp/>bix)<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor"><sp/><sp/>(<sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>bix)<sp/>+<sp/>SPIFFS_OBJ_LOOKUP_PAGES(fs)<sp/>*<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>-<sp/>sizeof(spiffs_obj_id)*2<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>checks<sp/>if<sp/>there<sp/>is<sp/>any<sp/>room<sp/>for<sp/>magic<sp/>in<sp/>the<sp/>object<sp/>luts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CHECK_MAGIC_POSSIBLE(fs)<sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"><sp/><sp/>(<sp/>(SPIFFS_OBJ_LOOKUP_MAX_ENTRIES(fs)<sp/>%<sp/>(SPIFFS_CFG_LOG_PAGE_SZ(fs)/sizeof(spiffs_obj_id)))<sp/>*<sp/>sizeof(spiffs_obj_id)<sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&lt;=<sp/>(SPIFFS_CFG_LOG_PAGE_SZ(fs)-sizeof(spiffs_obj_id)*2)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>helpers<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>entries<sp/>in<sp/>an<sp/>object<sp/>header<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_HDR_IX_LEN(fs)<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/>((SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>-<sp/>sizeof(spiffs_page_object_ix_header))/sizeof(spiffs_page_ix))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>entries<sp/>in<sp/>an<sp/>object<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_IX_LEN(fs)<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/>((SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>-<sp/>sizeof(spiffs_page_object_ix))/sizeof(spiffs_page_ix))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object<sp/>index<sp/>entry<sp/>for<sp/>given<sp/>data<sp/>span<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_IX_ENTRY(fs,<sp/>spix)<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/>((spix)<sp/>&lt;<sp/>SPIFFS_OBJ_HDR_IX_LEN(fs)<sp/>?<sp/>(spix)<sp/>:<sp/>(((spix)-SPIFFS_OBJ_HDR_IX_LEN(fs))%SPIFFS_OBJ_IX_LEN(fs)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object<sp/>index<sp/>span<sp/>index<sp/>number<sp/>for<sp/>given<sp/>data<sp/>span<sp/>index<sp/>or<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>spix)<sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/>((spix)<sp/>&lt;<sp/>SPIFFS_OBJ_HDR_IX_LEN(fs)<sp/>?<sp/>0<sp/>:<sp/>(1+((spix)-SPIFFS_OBJ_HDR_IX_LEN(fs))/SPIFFS_OBJ_IX_LEN(fs)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>span<sp/>index<sp/>for<sp/>object<sp/>index<sp/>span<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_DATA_SPAN_IX_FOR_OBJ_IX_SPAN_IX(fs,<sp/>spix)<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/>(<sp/>(spix)<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>(SPIFFS_OBJ_HDR_IX_LEN(fs)<sp/>+<sp/>(((spix)-1)<sp/>*<sp/>SPIFFS_OBJ_IX_LEN(fs)))<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_FILEHDL_OFFSET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_FH_OFFS(fs,<sp/>fh)<sp/><sp/><sp/>((fh)<sp/>!=<sp/>0<sp/>?<sp/>((fh)<sp/>+<sp/>(fs)-&gt;cfg.fh_ix_offset)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_FH_UNOFFS(fs,<sp/>fh)<sp/>((fh)<sp/>!=<sp/>0<sp/>?<sp/>((fh)<sp/>-<sp/>(fs)-&gt;cfg.fh_ix_offset)<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_FH_OFFS(fs,<sp/>fh)<sp/><sp/><sp/>(fh)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_FH_UNOFFS(fs,<sp/>fh)<sp/>(fh)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_T_OBJ_LU<sp/><sp/><sp/><sp/>(0&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_T_OBJ_LU2<sp/><sp/><sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_T_OBJ_IX<sp/><sp/><sp/><sp/>(2&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_T_OBJ_DA<sp/><sp/><sp/><sp/>(3&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_C_DELE<sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_C_UPDT<sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_C_MOVS<sp/><sp/><sp/><sp/><sp/><sp/>(2&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_C_MOVD<sp/><sp/><sp/><sp/><sp/><sp/>(3&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_C_FLSH<sp/><sp/><sp/><sp/><sp/><sp/>(4&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_C_READ<sp/><sp/><sp/><sp/><sp/><sp/>(5&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_C_WRTHRU<sp/><sp/><sp/><sp/>(6&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_TYPE_MASK<sp/>(3&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_OP_COM_MASK<sp/><sp/>(7&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>this<sp/>page<sp/>is<sp/>written<sp/>to,<sp/>else<sp/>clean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PH_FLAG_USED<sp/><sp/><sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>writing<sp/>is<sp/>finalized,<sp/>else<sp/>under<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PH_FLAG_FINAL<sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>this<sp/>is<sp/>an<sp/>index<sp/>page,<sp/>else<sp/>a<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PH_FLAG_INDEX<sp/><sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>page<sp/>is<sp/>deleted,<sp/>else<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PH_FLAG_DELET<sp/><sp/>(1&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>0,<sp/>this<sp/>index<sp/>header<sp/>is<sp/>being<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_PH_FLAG_IXDELE<sp/>(1&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CHECK_MOUNT(fs)<sp/>\</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"><sp/><sp/>((fs)-&gt;mounted<sp/>!=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CHECK_CFG(fs)<sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/>((fs)-&gt;config_magic<sp/>==<sp/>SPIFFS_CONFIG_MAGIC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CHECK_RES(res)<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((res)<sp/>&lt;<sp/>SPIFFS_OK)<sp/>return<sp/>(res);<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_API_CHECK_MOUNT(fs)<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!SPIFFS_CHECK_MOUNT((fs)))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(fs)-&gt;err_code<sp/>=<sp/>SPIFFS_ERR_NOT_MOUNTED;<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>SPIFFS_ERR_NOT_MOUNTED;<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_API_CHECK_CFG(fs)<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!SPIFFS_CHECK_CFG((fs)))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(fs)-&gt;err_code<sp/>=<sp/>SPIFFS_ERR_NOT_CONFIGURED;<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>SPIFFS_ERR_NOT_CONFIGURED;<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_API_CHECK_RES(fs,<sp/>res)<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/><sp/>if<sp/>((res)<sp/>&lt;<sp/>SPIFFS_OK)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(fs)-&gt;err_code<sp/>=<sp/>(res);<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(res);<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_API_CHECK_RES_UNLOCK(fs,<sp/>res)<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/>if<sp/>((res)<sp/>&lt;<sp/>SPIFFS_OK)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(fs)-&gt;err_code<sp/>=<sp/>(res);<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SPIFFS_UNLOCK(fs);<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>(res);<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VALIDATE_OBJIX(ph,<sp/>objid,<sp/>spix)<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_USED)<sp/>!=<sp/>0)<sp/>return<sp/>SPIFFS_ERR_IS_FREE;<sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_DELET)<sp/>==<sp/>0)<sp/>return<sp/>SPIFFS_ERR_DELETED;<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_FINAL)<sp/>!=<sp/>0)<sp/>return<sp/>SPIFFS_ERR_NOT_FINALIZED;<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_INDEX)<sp/>!=<sp/>0)<sp/>return<sp/>SPIFFS_ERR_NOT_INDEX;<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((objid)<sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG)<sp/>==<sp/>0)<sp/>return<sp/>SPIFFS_ERR_NOT_INDEX;<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((ph).span_ix<sp/>!=<sp/>(spix))<sp/>return<sp/>SPIFFS_ERR_INDEX_SPAN_MISMATCH;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>((spix)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_IXDELE)<sp/>==<sp/>0)<sp/>return<sp/>SPIFFS_ERR_DELETED;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VALIDATE_DATA(ph,<sp/>objid,<sp/>spix)<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_USED)<sp/>!=<sp/>0)<sp/>return<sp/>SPIFFS_ERR_IS_FREE;<sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_DELET)<sp/>==<sp/>0)<sp/>return<sp/>SPIFFS_ERR_DELETED;<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_FINAL)<sp/>!=<sp/>0)<sp/>return<sp/>SPIFFS_ERR_NOT_FINALIZED;<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(((ph).flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_INDEX)<sp/>==<sp/>0)<sp/>return<sp/>SPIFFS_ERR_IS_INDEX;<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((objid)<sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG)<sp/>return<sp/>SPIFFS_ERR_IS_INDEX;<sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((ph).span_ix<sp/>!=<sp/>(spix))<sp/>return<sp/>SPIFFS_ERR_DATA_SPAN_MISMATCH;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>check<sp/>id,<sp/>only<sp/>visit<sp/>matching<sp/>objec<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VIS_CHECK_ID<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>report<sp/>argument<sp/>object<sp/>id<sp/>to<sp/>visitor<sp/>-<sp/>else<sp/>object<sp/>lookup<sp/>id<sp/>is<sp/>reported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VIS_CHECK_PH<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stop<sp/>searching<sp/>at<sp/>end<sp/>of<sp/>all<sp/>look<sp/>up<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_VIS_NO_WRAP<sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_HAL_CALLBACK_EXTRA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_HAL_WRITE(_fs,<sp/>_paddr,<sp/>_len,<sp/>_src)<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/>(_fs)-&gt;cfg.hal_write_f((_fs),<sp/>(_paddr),<sp/>(_len),<sp/>(_src))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_HAL_READ(_fs,<sp/>_paddr,<sp/>_len,<sp/>_dst)<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/>(_fs)-&gt;cfg.hal_read_f((_fs),<sp/>(_paddr),<sp/>(_len),<sp/>(_dst))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_HAL_ERASE(_fs,<sp/>_paddr,<sp/>_len)<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/>(_fs)-&gt;cfg.hal_erase_f((_fs),<sp/>(_paddr),<sp/>(_len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>SPIFFS_HAL_CALLBACK_EXTRA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_HAL_WRITE(_fs,<sp/>_paddr,<sp/>_len,<sp/>_src)<sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/>(_fs)-&gt;cfg.hal_write_f((_paddr),<sp/>(_len),<sp/>(_src))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_HAL_READ(_fs,<sp/>_paddr,<sp/>_len,<sp/>_dst)<sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"><sp/><sp/>(_fs)-&gt;cfg.hal_read_f((_paddr),<sp/>(_len),<sp/>(_dst))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_HAL_ERASE(_fs,<sp/>_paddr,<sp/>_len)<sp/>\</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"><sp/><sp/>(_fs)-&gt;cfg.hal_erase_f((_paddr),<sp/>(_len))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SPIFFS_HAL_CALLBACK_EXTRA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CACHE_FLAG_DIRTY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CACHE_FLAG_WRTHRU<sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CACHE_FLAG_OBJLU<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CACHE_FLAG_OBJIX<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CACHE_FLAG_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CACHE_FLAG_TYPE_WR<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPIFFS_CACHE_PAGE_SIZE(fs)<sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"><sp/><sp/>(sizeof(spiffs_cache_page)<sp/>+<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>spiffs_get_cache(fs)<sp/>\</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"><sp/><sp/>((spiffs_cache<sp/>*)((fs)-&gt;cache))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>spiffs_get_cache_page_hdr(fs,<sp/>c,<sp/>ix)<sp/>\</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"><sp/><sp/>((spiffs_cache_page<sp/>*)(&amp;((c)-&gt;cpages[(ix)<sp/>*<sp/>SPIFFS_CACHE_PAGE_SIZE(fs)])))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>spiffs_get_cache_page(fs,<sp/>c,<sp/>ix)<sp/>\</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"><sp/><sp/>((u8_t<sp/>*)(&amp;((c)-&gt;cpages[(ix)<sp/>*<sp/>SPIFFS_CACHE_PAGE_SIZE(fs)]))<sp/>+<sp/>sizeof(spiffs_cache_page))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cache<sp/>page<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>u8_t<sp/>flags;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>u8_t<sp/>ix;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>access<sp/>of<sp/>this<sp/>cache<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>u32_t<sp/>last_access;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>read<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>cache<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE_WR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>write<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>cache<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>offset;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>cache<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u16_t<sp/>size;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}<sp/>spiffs_cache_page;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cache<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>u8_t<sp/>cpage_count;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>u32_t<sp/>last_access;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>u32_t<sp/>cpage_use_map;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>u32_t<sp/>cpage_use_mask;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>u8_t<sp/>*cpages;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}<sp/>spiffs_cache;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spiffs<sp/>nucleus<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="structspiffs__fd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>filesystem<sp/>of<sp/>this<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>file<sp/>descriptor<sp/>-<sp/>if<sp/>0,<sp/>the<sp/>file<sp/>descriptor<sp/>is<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>spiffs_file<sp/>file_nbr;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>id<sp/>-<sp/>if<sp/>SPIFFS_OBJ_ID_ERASED,<sp/>the<sp/>file<sp/>was<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>obj_id;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>u32_t<sp/>size;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cached<sp/>object<sp/>index<sp/>header<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>objix_hdr_pix;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cached<sp/>offset<sp/>object<sp/>index<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>cursor_objix_pix;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cached<sp/>offset<sp/>object<sp/>index<sp/>span<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>cursor_objix_spix;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>absolute<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>u32_t<sp/>offset;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>file<sp/>descriptor<sp/>offset<sp/>(cached)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>u32_t<sp/>fdoffset;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fd<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>spiffs_flags<sp/>flags;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE_WR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>spiffs_cache_page<sp/>*cache_page;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_TEMPORAL_FD_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>djb2<sp/>hash<sp/>of<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>u32_t<sp/>name_hash;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>hit<sp/>score<sp/>(score<sp/>==<sp/>0<sp/>indicates<sp/>never<sp/>used<sp/>fd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>u16_t<sp/>score;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>spiffs<sp/>index<sp/>map,<sp/>if<sp/>0<sp/>it<sp/>means<sp/>unmapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__ix__map" kindref="compound">spiffs_ix_map</ref><sp/>*ix_map;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">}<sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object<sp/>structs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>page<sp/>header,<sp/>part<sp/>of<sp/>each<sp/>page<sp/>except<sp/>object<sp/>lookup<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>this<sp/>is<sp/>always<sp/>aligned<sp/>when<sp/>the<sp/>data<sp/>page<sp/>is<sp/>an<sp/>object<sp/>index,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>in<sp/>this<sp/>case<sp/>struct<sp/>spiffs_page_object_ix<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">SPIFFS_PACKED</ref><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>obj_id;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>span<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>span_ix;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>u8_t<sp/>flags;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}<sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object<sp/>index<sp/>header<sp/>page<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">SPIFFS_PACKED</ref></highlight></codeline>
<codeline lineno="494"><highlight class="normal">#if<sp/>SPIFFS_ALIGNED_OBJECT_INDEX_TABLES</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute((<sp/>aligned(sizeof(spiffs_page_ix))<sp/>))</highlight></codeline>
<codeline lineno="496"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>common<sp/>page<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>p_hdr;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>alignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>u8_t<sp/>_align[4<sp/>-<sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)&amp;3)==0<sp/>?<sp/>4<sp/>:<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)&amp;3))];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>u32_t<sp/>size;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>of<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>spiffs_obj_type<sp/>type;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>of<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>u8_t<sp/>name[SPIFFS_OBJ_NAME_LEN];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_OBJ_META_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>metadata.<sp/>not<sp/>interpreted<sp/>by<sp/>SPIFFS<sp/>in<sp/>any<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>u8_t<sp/>meta[SPIFFS_OBJ_META_LEN];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">}<sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object<sp/>index<sp/>page<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">SPIFFS_PACKED</ref><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>p_hdr;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/>u8_t<sp/>_align[4<sp/>-<sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)&amp;3)==0<sp/>?<sp/>4<sp/>:<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)&amp;3))];</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}<sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>callback<sp/>func<sp/>for<sp/>object<sp/>lookup<sp/>visitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>s32_t<sp/>(*spiffs_visitor_f)(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/>spiffs_obj_id<sp/>id,<sp/>spiffs_block_ix<sp/>bix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix_entry,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_spiffs_rd(fs,<sp/>op,<sp/>fh,<sp/>addr,<sp/>len,<sp/>dst)<sp/>\</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>spiffs_phys_rd((fs),<sp/>(op),<sp/>(fh),<sp/>(addr),<sp/>(len),<sp/>(dst))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_spiffs_wr(fs,<sp/>op,<sp/>fh,<sp/>addr,<sp/>len,<sp/>src)<sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>spiffs_phys_wr((fs),<sp/>(op),<sp/>(fh),<sp/>(addr),<sp/>(len),<sp/>(src))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_spiffs_rd(fs,<sp/>op,<sp/>fh,<sp/>addr,<sp/>len,<sp/>dst)<sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>spiffs_phys_rd((fs),<sp/>(addr),<sp/>(len),<sp/>(dst))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_spiffs_wr(fs,<sp/>op,<sp/>fh,<sp/>addr,<sp/>len,<sp/>src)<sp/>\</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>spiffs_phys_wr((fs),<sp/>(addr),<sp/>(len),<sp/>(src))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(a,b)<sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX(a,b)<sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">s32_t<sp/>spiffs_phys_rd(</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="548"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>SPIFFS_CACHE</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>op,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>fh,</highlight></codeline>
<codeline lineno="551"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>addr,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*dst);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">s32_t<sp/>spiffs_phys_wr(</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="558"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>SPIFFS_CACHE</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>op,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>fh,</highlight></codeline>
<codeline lineno="561"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>addr,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*src);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">s32_t<sp/>spiffs_phys_cpy(</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>fh,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>dst,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>src,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">s32_t<sp/>spiffs_phys_count_free_blocks(</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_entry_visitor(</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>starting_block,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_lu_entry,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>flags,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_visitor_f<sp/>v,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>*block_ix,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lu_entry);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">s32_t<sp/>spiffs_erase_block(</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_USE_MAGIC<sp/>&amp;&amp;<sp/>SPIFFS_USE_MAGIC_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">s32_t<sp/>spiffs_probe(</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__config" kindref="compound">spiffs_config</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SPIFFS_USE_MAGIC<sp/>&amp;&amp;<sp/>SPIFFS_USE_MAGIC_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_scan(</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_free_obj_id(</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>*obj_id,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*conflicting_name);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_free(</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>starting_block,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_lu_entry,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>*block_ix,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lu_entry);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_id(</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>starting_block,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_lu_entry,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>*block_ix,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lu_entry);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_id_and_span(</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_span_ix<sp/>spix,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>exclusion_pix,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_id_and_span_by_phdr(</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_span_ix<sp/>spix,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>exclusion_pix,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal">s32_t<sp/>spiffs_page_allocate_data(</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>*ph,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*data,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>page_offs,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>finalize,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">s32_t<sp/>spiffs_page_move(</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>fh,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*page_data,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>*page_hdr,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>src_pix,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*dst_pix);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal">s32_t<sp/>spiffs_page_delete(</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">s32_t<sp/>spiffs_object_create(</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>name[],</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>meta[],</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_type<sp/>type,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*objix_hdr_pix);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">s32_t<sp/>spiffs_object_update_index_hdr(</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>objix_hdr_pix,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*new_objix_hdr_data,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>name[],</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>meta[],</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>size,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*new_pix);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal">s32_t<sp/>spiffs_populate_ix_map(</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>vec_entry_start,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>vec_entry_end);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_cb_object_event(</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ev,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_span_ix<sp/>spix,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>new_pix,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>new_size);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal">s32_t<sp/>spiffs_object_open_by_id(</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*f,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_flags<sp/>flags,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_mode<sp/>mode);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">s32_t<sp/>spiffs_object_open_by_page(</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*f,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_flags<sp/>flags,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_mode<sp/>mode);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal">s32_t<sp/>spiffs_object_append(</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>offset,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*data,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">s32_t<sp/>spiffs_object_modify(</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>offset,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*data,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">s32_t<sp/>spiffs_object_read(</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>offset,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*dst);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal">s32_t<sp/>spiffs_object_truncate(</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>new_len,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>remove_object);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">s32_t<sp/>spiffs_object_find_object_index_header_by_name(</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>name[SPIFFS_OBJ_NAME_LEN],</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">s32_t<sp/>spiffs_gc_check(</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal">s32_t<sp/>spiffs_gc_erase_page_stats(</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal">s32_t<sp/>spiffs_gc_find_candidate(</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>**block_candidate,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*candidate_count,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fs_crammed);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal">s32_t<sp/>spiffs_gc_clean(</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal">s32_t<sp/>spiffs_gc_quick(</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/>u16_t<sp/>max_free_pages);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal">s32_t<sp/>spiffs_fd_find_new(</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>**fd,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal">s32_t<sp/>spiffs_fd_return(</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>f);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal">s32_t<sp/>spiffs_fd_get(</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>f,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>**fd);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_TEMPORAL_FD_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_fd_temporal_cache_rehash(</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*old_path,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_path);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_cache_init(</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_cache_drop_page(</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE_WR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal">spiffs_cache_page<sp/>*spiffs_cache_page_allocate_by_fd(</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_cache_fd_release(</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_cache_page<sp/>*cp);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal">spiffs_cache_page<sp/>*spiffs_cache_page_get_by_fd(</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal">s32_t<sp/>spiffs_lookup_consistency_check(</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>check_all_objects);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal">s32_t<sp/>spiffs_page_consistency_check(</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal">s32_t<sp/>spiffs_object_index_consistency_check(</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment">//<sp/>memcpy<sp/>macro,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//<sp/>checked<sp/>in<sp/>test<sp/>builds,<sp/>otherwise<sp/>plain<sp/>memcpy<sp/>(unless<sp/>already<sp/>defined)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SPIFFS_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SPIFFS_MEMCPY(__d,<sp/>__s,<sp/>__l)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="826"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>intptr_t<sp/>__a1<sp/>=<sp/>(intptr_t)((u8_t*)(__s));<sp/>\</highlight></codeline>
<codeline lineno="827"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>intptr_t<sp/>__a2<sp/>=<sp/>(intptr_t)((u8_t*)(__s)+(__l));<sp/>\</highlight></codeline>
<codeline lineno="828"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>intptr_t<sp/>__b1<sp/>=<sp/>(intptr_t)((u8_t*)(__d));<sp/>\</highlight></codeline>
<codeline lineno="829"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>intptr_t<sp/>__b2<sp/>=<sp/>(intptr_t)((u8_t*)(__d)+(__l));<sp/>\</highlight></codeline>
<codeline lineno="830"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(__a1<sp/>&lt;=<sp/>__b2<sp/>&amp;&amp;<sp/>__b1<sp/>&lt;=<sp/>__a2)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="831"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;FATAL<sp/>OVERLAP:<sp/>memcpy<sp/>from<sp/>%lx..%lx<sp/>to<sp/>%lx..%lx\n&quot;,<sp/>__a1,<sp/>__a2,<sp/>__b1,<sp/>__b2);<sp/>\</highlight></codeline>
<codeline lineno="832"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>ERREXIT();<sp/>\</highlight></codeline>
<codeline lineno="833"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="834"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>memcpy((__d),(__s),(__l));<sp/>\</highlight></codeline>
<codeline lineno="835"><highlight class="preprocessor">}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SPIFFS_MEMCPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SPIFFS_MEMCPY(__d,<sp/>__s,<sp/>__l)<sp/>do{memcpy((__d),(__s),(__l));}while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//_SPIFFS_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SPIFFS_NUCLEUS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/spiffs_nucleus.h"/>
  </compounddef>
</doxygen>
