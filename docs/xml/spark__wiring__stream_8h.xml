<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="spark__wiring__stream_8h" kind="file" language="C++">
    <compoundname>spark_wiring_stream.h</compoundname>
    <includes local="yes">spark_wiring_string.h</includes>
    <includes refid="spark__wiring__print_8h" local="yes">spark_wiring_print.h</includes>
    <includes local="yes">system_tick_hal.h</includes>
    <incdepgraph>
      <node id="10">
        <label>spark_wiring_print.h</label>
        <link refid="spark__wiring__print_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>spark_wiring_printable.h</label>
      </node>
      <node id="11">
        <label>stddef.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="15">
        <label>system_tick_hal.h</label>
      </node>
      <node id="9">
        <label>spark_wiring_string.h</label>
      </node>
      <node id="8">
        <label>docs/src/spark_wiring_stream.h</label>
        <link refid="spark__wiring__stream_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_stream" prot="public">Stream</innerclass>
    <briefdescription>
<para>Header for spark_wiring_stream.c module. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mohit Bhoite </para></simplesect>
<simplesect kind="version"><para>V1.0.0 </para></simplesect>
<simplesect kind="date"><para>13-March-2013 Copyright (c) 2013-2015 Particle Industries, Inc. All rights reserved. Copyright (c) 2010 David A. Mellis. All right reserved.</para></simplesect>
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para><para>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.</para><para>You should have received a copy of the GNU Lesser General Public License along with this library; if not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#ifndef<sp/>__SPARK_WIRING_STREAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SPARK_WIRING_STREAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spark_wiring_string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spark__wiring__print_8h" kindref="compound">spark_wiring_print.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system_tick_hal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compatability<sp/>macros<sp/>for<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment">#define<sp/><sp/><sp/>getInt()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseInt()</highlight></codeline>
<codeline lineno="37"><highlight class="comment">#define<sp/><sp/><sp/>getInt(skipChar)<sp/><sp/><sp/><sp/>parseInt(skipchar)</highlight></codeline>
<codeline lineno="38"><highlight class="comment">#define<sp/><sp/><sp/>getFloat()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseFloat()</highlight></codeline>
<codeline lineno="39"><highlight class="comment">#define<sp/><sp/><sp/>getFloat(skipChar)<sp/><sp/>parseFloat(skipChar)</highlight></codeline>
<codeline lineno="40"><highlight class="comment">#define<sp/><sp/><sp/>getString(<sp/>pre_string,<sp/>post_string,<sp/>buffer,<sp/>length)</highlight></codeline>
<codeline lineno="41"><highlight class="comment">readBytesBetween(<sp/>pre_string,<sp/>terminator,<sp/>buffer,<sp/>length)</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_stream" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stream" kindref="compound">Stream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_print" kindref="compound">Print</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_DO_NOT_DOCUMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>system_tick_t<sp/>_timeout;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>milliseconds<sp/>to<sp/>wait<sp/>for<sp/>the<sp/>next<sp/>char<sp/>before<sp/>aborting<sp/>timed<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>system_tick_t<sp/>_startMillis;<sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>timeout<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timedRead();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>method<sp/>to<sp/>read<sp/>stream<sp/>with<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timedPeek();<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>method<sp/>to<sp/>peek<sp/>stream<sp/>with<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peekNextDigit();<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>next<sp/>numeric<sp/>digit<sp/>in<sp/>the<sp/>stream<sp/>or<sp/>-1<sp/>if<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a9c98a763395005c08ce95afb2f06c7b1" kindref="member">available</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_stream_1aea5dee9fcb038148515b7c9212d38dc0" kindref="member">read</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a30c3c212ec6ea67277a708c5ea2501a5" kindref="member">peek</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_stream_1aa3ef2c34f152a0b2ea8de9139b9461da" kindref="member">flush</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_DO_NOT_DOCUMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_stream" kindref="compound">Stream</ref>()<sp/>{_timeout=1000;}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parsing<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_stream_1abaa50647d6dbb3baf7697a2691a06177" kindref="member">setTimeout</ref>(system_tick_t<sp/>timeout);<sp/><sp/></highlight><highlight class="comment">//<sp/>sets<sp/>maximum<sp/>milliseconds<sp/>to<sp/>wait<sp/>for<sp/>stream<sp/>data,<sp/>default<sp/>is<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a4bab30ccd324efd461dee46a2339f673" kindref="member">find</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*target);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a4bab30ccd324efd461dee46a2339f673" kindref="member">find</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_stream_1ad1f5f6600832396fb38a897baf4de35b" kindref="member">findUntil</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*target,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*terminator);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_stream_1ad1f5f6600832396fb38a897baf4de35b" kindref="member">findUntil</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*target,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>targetLen,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*terminate,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>termLen);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>above<sp/>but<sp/>search<sp/>ends<sp/>if<sp/>the<sp/>terminate<sp/>string<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a497ffcbcb4d5bb889a8fde487bcc1b98" kindref="member">parseInt</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a5e5a0cc11eb586d89dcb7fa8e53a87e8" kindref="member">parseFloat</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a45fd1336a323ea83b16e8507055f44ea" kindref="member">readBytes</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_stream_1af84672a4fb2620466958d3118d4fea00" kindref="member">readBytesUntil</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>terminator,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Arduino<sp/>String<sp/>functions<sp/>to<sp/>be<sp/>added<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>String<sp/><ref refid="class_stream_1a1c60bdda2b65d78e5a1362d51b856c5a" kindref="member">readString</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>String<sp/><ref refid="class_stream_1a6a409da87c552909260d8cc428c5ca70" kindref="member">readStringUntil</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>terminator);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_DO_NOT_DOCUMENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a497ffcbcb4d5bb889a8fde487bcc1b98" kindref="member">parseInt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>skipChar);<sp/></highlight><highlight class="comment">//<sp/>as<sp/>above<sp/>but<sp/>the<sp/>given<sp/>skipChar<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>above<sp/>but<sp/>the<sp/>given<sp/>skipChar<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>allows<sp/>format<sp/>characters<sp/>(typically<sp/>commas)<sp/>in<sp/>values<sp/>to<sp/>be<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_stream_1a5e5a0cc11eb586d89dcb7fa8e53a87e8" kindref="member">parseFloat</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>skipChar);<sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>above<sp/>but<sp/>the<sp/>given<sp/>skipChar<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="docs/src/spark_wiring_stream.h"/>
  </compounddef>
</doxygen>
