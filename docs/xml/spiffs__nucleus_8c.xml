<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="spiffs__nucleus_8c" kind="file" language="C++">
    <compoundname>spiffs_nucleus.c</compoundname>
    <includes refid="spiffs_8h" local="yes">spiffs.h</includes>
    <includes refid="spiffs__nucleus_8h" local="yes">spiffs_nucleus.h</includes>
    <incdepgraph>
      <node id="80">
        <label>spiffs.h</label>
        <link refid="spiffs_8h_source"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>src/spiffs_nucleus.c</label>
        <link refid="spiffs__nucleus_8c"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>spiffs_nucleus.h</label>
        <link refid="spiffs__nucleus_8h_source"/>
      </node>
      <node id="81">
        <label>spiffs_config.h</label>
        <link refid="spiffs__config_8h_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>stdlib.h</label>
      </node>
      <node id="85">
        <label>stddef.h</label>
      </node>
      <node id="84">
        <label>string.h</label>
      </node>
      <node id="86">
        <label>unistd.h</label>
      </node>
      <node id="82">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structspiffs__ix__map__populate__state" prot="public">spiffs_ix_map_populate_state</innerclass>
    <innerclass refid="structspiffs__free__obj__id__state" prot="public">spiffs_free_obj_id_state</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="spiffs__nucleus_8c_1a1ae938f16bb8de060202ab5fd8fe1f23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_page_data_check</definition>
        <argsstring>(spiffs *fs, spiffs_fd *fd, spiffs_page_ix pix, spiffs_span_ix spix)</argsstring>
        <name>spiffs_page_data_check</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>pix</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="4" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="4" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a636b10b92ba75b456ea597099d9ecd5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_page_index_check</definition>
        <argsstring>(spiffs *fs, spiffs_fd *fd, spiffs_page_ix pix, spiffs_span_ix spix)</argsstring>
        <name>spiffs_page_index_check</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>pix</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="33" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="33" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a7caac7b832eb7013058cc4cf8b5e1c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_phys_cpy</definition>
        <argsstring>(spiffs *fs, spiffs_file fh, u32_t dst, u32_t src, u32_t len)</argsstring>
        <name>spiffs_phys_cpy</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="83" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="83" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1aec3d4ab5d5b920deb4beb731ad9f0406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_entry_visitor</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, u8_t flags, spiffs_obj_id obj_id, spiffs_visitor_f v, const void *user_const_p, void *user_var_p, spiffs_block_ix *block_ix, int *lu_entry)</argsstring>
        <name>spiffs_obj_lu_find_entry_visitor</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>starting_block</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starting_lu_entry</declname>
        </param>
        <param>
          <type>u8_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_visitor_f</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <param>
          <type>spiffs_block_ix *</type>
          <declname>block_ix</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lu_entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="124" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="124" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1ae5780e3c0f5cc784e3a8c44e854f030f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_erase_block</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix bix)</argsstring>
        <name>spiffs_erase_block</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="226" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="226" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a4a7c272db22ee2c7ac610aab6bde4a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_probe</definition>
        <argsstring>(spiffs_config *cfg)</argsstring>
        <name>spiffs_probe</name>
        <param>
          <type><ref refid="structspiffs__config" kindref="compound">spiffs_config</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="268" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="268" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a913311e8dccef8e8cec4727291da9cba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_obj_lu_scan_v</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</argsstring>
        <name>spiffs_obj_lu_scan_v</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix_entry</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="320" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="320" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a9d653fcca42282dd6d032c153fc0f4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_scan</definition>
        <argsstring>(spiffs *fs)</argsstring>
        <name>spiffs_obj_lu_scan</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="348" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="348" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a0c1b9246d8e3de063576a5a6a95d1781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_free</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_block_ix *block_ix, int *lu_entry)</argsstring>
        <name>spiffs_obj_lu_find_free</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>starting_block</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starting_lu_entry</declname>
        </param>
        <param>
          <type>spiffs_block_ix *</type>
          <declname>block_ix</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lu_entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="449" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="449" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a42478252c59173e13b8cbdf3d23103a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_id</definition>
        <argsstring>(spiffs *fs, spiffs_block_ix starting_block, int starting_lu_entry, spiffs_obj_id obj_id, spiffs_block_ix *block_ix, int *lu_entry)</argsstring>
        <name>spiffs_obj_lu_find_id</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>starting_block</declname>
        </param>
        <param>
          <type>int</type>
          <declname>starting_lu_entry</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_block_ix *</type>
          <declname>block_ix</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>lu_entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="485" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="485" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1ab921c6f07e3c386f8b8d96873e3423b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_obj_lu_find_id_and_span_v</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</argsstring>
        <name>spiffs_obj_lu_find_id_and_span_v</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix_entry</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="501" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="501" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a71e771fdce40e52d75dc207a474558c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_id_and_span</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)</argsstring>
        <name>spiffs_obj_lu_find_id_and_span</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>exclusion_pix</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="527" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="527" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1ad04d186a13165e49470f4691e304c1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_id_and_span_by_phdr</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_span_ix spix, spiffs_page_ix exclusion_pix, spiffs_page_ix *pix)</argsstring>
        <name>spiffs_obj_lu_find_id_and_span_by_phdr</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>exclusion_pix</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="566" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="566" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a6cc512b096a03d7eeea5361f3775f23a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void spiffs_update_ix_map</definition>
        <argsstring>(spiffs *fs, spiffs_fd *fd, spiffs_span_ix objix_spix, spiffs_page_object_ix *objix)</argsstring>
        <name>spiffs_update_ix_map</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>objix_spix</declname>
        </param>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref> *</type>
          <declname>objix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="606" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="606" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a5b3215104a5a78f8ba9d9d6534314847" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_populate_ix_map_v</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</argsstring>
        <name>spiffs_populate_ix_map_v</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix_entry</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="665" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="665" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1aaae1591dc8da555c49ca83c49f2341ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_populate_ix_map</definition>
        <argsstring>(spiffs *fs, spiffs_fd *fd, u32_t vec_entry_start, u32_t vec_entry_end)</argsstring>
        <name>spiffs_populate_ix_map</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>vec_entry_start</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>vec_entry_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="712" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="712" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a7c2b33a8db528e8f6feebd6f40cc4208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_page_allocate_data</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_page_header *ph, u8_t *data, u32_t len, u32_t page_offs, u8_t finalize, spiffs_page_ix *pix)</argsstring>
        <name>spiffs_page_allocate_data</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>page_offs</declname>
        </param>
        <param>
          <type>u8_t</type>
          <declname>finalize</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="753" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="753" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a4418c46c45673ca0bad11a9da6b4d006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_page_move</definition>
        <argsstring>(spiffs *fs, spiffs_file fh, u8_t *page_data, spiffs_obj_id obj_id, spiffs_page_header *page_hdr, spiffs_page_ix src_pix, spiffs_page_ix *dst_pix)</argsstring>
        <name>spiffs_page_move</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>fh</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>page_data</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref> *</type>
          <declname>page_hdr</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>src_pix</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>dst_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="812" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="812" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1aa564f933c972a2d2b08bb37fea37fba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_page_delete</definition>
        <argsstring>(spiffs *fs, spiffs_page_ix pix)</argsstring>
        <name>spiffs_page_delete</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="876" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="876" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1af02f56832ef3b0eb65040f4c45bb0add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_create</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, const u8_t name[], const u8_t meta[], spiffs_obj_type type, spiffs_page_ix *objix_hdr_pix)</argsstring>
        <name>spiffs_object_create</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>meta</declname>
          <array>[]</array>
        </param>
        <param>
          <type>spiffs_obj_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>objix_hdr_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="912" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="912" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a548c33b05ccf120a3e191b42998c6d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_update_index_hdr</definition>
        <argsstring>(spiffs *fs, spiffs_fd *fd, spiffs_obj_id obj_id, spiffs_page_ix objix_hdr_pix, u8_t *new_objix_hdr_data, const u8_t name[], const u8_t meta[], u32_t size, spiffs_page_ix *new_pix)</argsstring>
        <name>spiffs_object_update_index_hdr</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>objix_hdr_pix</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>new_objix_hdr_data</declname>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>name</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>meta</declname>
          <array>[]</array>
        </param>
        <param>
          <type>u32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>new_pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="979" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="979" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a68c25d2985a5c07aa21fe333c6c61864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spiffs_cb_object_event</definition>
        <argsstring>(spiffs *fs, spiffs_page_object_ix *objix, int ev, spiffs_obj_id obj_id_raw, spiffs_span_ix spix, spiffs_page_ix new_pix, u32_t new_size)</argsstring>
        <name>spiffs_cb_object_event</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref> *</type>
          <declname>objix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ev</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id_raw</declname>
        </param>
        <param>
          <type>spiffs_span_ix</type>
          <declname>spix</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>new_pix</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1041" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1041" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1af2274933037200695f2b1d4e32e25c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_open_by_id</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_fd *fd, spiffs_flags flags, spiffs_mode mode)</argsstring>
        <name>spiffs_object_open_by_id</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>spiffs_flags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>spiffs_mode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1154" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1154" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1ae872b04dcd3d89548b13001b271aaef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_open_by_page</definition>
        <argsstring>(spiffs *fs, spiffs_page_ix pix, spiffs_fd *fd, spiffs_flags flags, spiffs_mode mode)</argsstring>
        <name>spiffs_object_open_by_page</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_page_ix</type>
          <declname>pix</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>spiffs_flags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>spiffs_mode</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1172" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1172" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1adc3eddb2989d45c22cf541648375010b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_append</definition>
        <argsstring>(spiffs_fd *fd, u32_t offset, u8_t *data, u32_t len)</argsstring>
        <name>spiffs_object_append</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1212" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1212" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a2dac840a00c2fc3f00ee53e39f13023e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_modify</definition>
        <argsstring>(spiffs_fd *fd, u32_t offset, u8_t *data, u32_t len)</argsstring>
        <name>spiffs_object_modify</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1459" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1459" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a3cfa8aceab3bd237b5924863e3ac5fef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_object_find_object_index_header_by_name_v</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id obj_id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</argsstring>
        <name>spiffs_object_find_object_index_header_by_name_v</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix_entry</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1661" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1661" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a31212be98ef82ec80a9211a5045ed435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_find_object_index_header_by_name</definition>
        <argsstring>(spiffs *fs, const u8_t name[SPIFFS_OBJ_NAME_LEN], spiffs_page_ix *pix)</argsstring>
        <name>spiffs_object_find_object_index_header_by_name</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const u8_t</type>
          <declname>name</declname>
          <array>[SPIFFS_OBJ_NAME_LEN]</array>
        </param>
        <param>
          <type>spiffs_page_ix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1691" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1691" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a64824b457c1664aa302736e79da6aa4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_truncate</definition>
        <argsstring>(spiffs_fd *fd, u32_t new_size, u8_t remove_full)</argsstring>
        <name>spiffs_object_truncate</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>new_size</declname>
        </param>
        <param>
          <type>u8_t</type>
          <declname>remove_full</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1727" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1727" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1ac880d8a477ca6a26de68d6372ca9c3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_object_read</definition>
        <argsstring>(spiffs_fd *fd, u32_t offset, u32_t len, u8_t *dst)</argsstring>
        <name>spiffs_object_read</name>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>u32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="1966" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="1966" bodyend="2056"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a6f3489589121f4843c01642ae098f0dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_obj_lu_find_free_obj_id_bitmap_v</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</argsstring>
        <name>spiffs_obj_lu_find_free_obj_id_bitmap_v</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>id</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix_entry</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2066" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2066" bodyend="2097"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1ad9070513bd5a60c4e8a2269952b9dbab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>static s32_t spiffs_obj_lu_find_free_obj_id_compact_v</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id id, spiffs_block_ix bix, int ix_entry, const void *user_const_p, void *user_var_p)</argsstring>
        <name>spiffs_obj_lu_find_free_obj_id_compact_v</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id</type>
          <declname>id</declname>
        </param>
        <param>
          <type>spiffs_block_ix</type>
          <declname>bix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ix_entry</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>user_const_p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_var_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2099" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2099" bodyend="2127"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a9d5b32825c34637fbc24f996e1cf065d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_obj_lu_find_free_obj_id</definition>
        <argsstring>(spiffs *fs, spiffs_obj_id *obj_id, const u8_t *conflicting_name)</argsstring>
        <name>spiffs_obj_lu_find_free_obj_id</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_obj_id *</type>
          <declname>obj_id</declname>
        </param>
        <param>
          <type>const u8_t *</type>
          <declname>conflicting_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2133" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2133" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1af3501036c35a57a6a5cc9f6738bded8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u32_t</type>
        <definition>static u32_t spiffs_hash</definition>
        <argsstring>(spiffs *fs, const u8_t *name)</argsstring>
        <name>spiffs_hash</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const u8_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2230" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2230" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a46fe490d99acc1d3d422d451b0c98d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_fd_find_new</definition>
        <argsstring>(spiffs *fs, spiffs_fd **fd, const char *name)</argsstring>
        <name>spiffs_fd_find_new</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> **</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2242" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2242" bodyend="2318"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1ac920b55d407430310cfa0b02785453d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_fd_return</definition>
        <argsstring>(spiffs *fs, spiffs_file f)</argsstring>
        <name>spiffs_fd_return</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2320" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2320" bodyend="2334"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1a308e4c2ab049ad6e7c97848a1a59bfbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>s32_t</type>
        <definition>s32_t spiffs_fd_get</definition>
        <argsstring>(spiffs *fs, spiffs_file f, spiffs_fd **fd)</argsstring>
        <name>spiffs_fd_get</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>spiffs_file</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref> **</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2336" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2336" bodyend="2346"/>
      </memberdef>
      <memberdef kind="function" id="spiffs__nucleus_8c_1af7e7e76ceafdcaad9455a23eedbad768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spiffs_fd_temporal_cache_rehash</definition>
        <argsstring>(spiffs *fs, const char *old_path, const char *new_path)</argsstring>
        <name>spiffs_fd_temporal_cache_rehash</name>
        <param>
          <type><ref refid="structspiffs__t" kindref="compound">spiffs</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>old_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/spiffs_nucleus.c" line="2349" column="1" bodyfile="src/spiffs_nucleus.c" bodystart="2349" bodyend="2363"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;spiffs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spiffs_nucleus.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_page_data_check(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,<sp/>spiffs_page_ix<sp/>pix,<sp/>spiffs_span_ix<sp/>spix)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix<sp/>==<sp/>(spiffs_page_ix)-1)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referring<sp/>to<sp/>page<sp/>0xffff....,<sp/>bad<sp/>object<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_INDEX_REF_FREE;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix<sp/>%<sp/>SPIFFS_PAGES_PER_BLOCK(fs)<sp/>&lt;<sp/>SPIFFS_OBJ_LOOKUP_PAGES(fs))<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referring<sp/>to<sp/>an<sp/>object<sp/>lookup<sp/>page,<sp/>bad<sp/>object<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_INDEX_REF_LU;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix<sp/>&gt;<sp/>SPIFFS_MAX_PAGES(fs))<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referring<sp/>to<sp/>a<sp/>bad<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_INDEX_REF_INVALID;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_PAGE_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>ph;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;ph);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>SPIFFS_VALIDATE_DATA(ph,<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG,<sp/>spix);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_page_index_check(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,<sp/>spiffs_page_ix<sp/>pix,<sp/>spiffs_span_ix<sp/>spix)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix<sp/>==<sp/>(spiffs_page_ix)-1)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referring<sp/>to<sp/>page<sp/>0xffff....,<sp/>bad<sp/>object<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_INDEX_FREE;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix<sp/>%<sp/>SPIFFS_PAGES_PER_BLOCK(fs)<sp/>&lt;<sp/>SPIFFS_OBJ_LOOKUP_PAGES(fs))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referring<sp/>to<sp/>an<sp/>object<sp/>lookup<sp/>page,<sp/>bad<sp/>object<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_INDEX_LU;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix<sp/>&gt;<sp/>SPIFFS_MAX_PAGES(fs))<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>referring<sp/>to<sp/>a<sp/>bad<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_INDEX_INVALID;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_PAGE_CHECK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>ph;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;ph);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>SPIFFS_VALIDATE_OBJIX(ph,<sp/>fd-&gt;obj_id,<sp/>spix);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">s32_t<sp/>spiffs_phys_rd(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>addr,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*dst)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_HAL_READ(fs,<sp/>addr,<sp/>len,<sp/>dst);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">s32_t<sp/>spiffs_phys_wr(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>addr,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*src)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_HAL_WRITE(fs,<sp/>addr,<sp/>len,<sp/>src);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">s32_t<sp/>spiffs_phys_cpy(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>fh,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>dst,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>src,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>(void)fh;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>u8_t<sp/>b[SPIFFS_COPY_BUFFER_STACK];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>chunk_size<sp/>=<sp/>MIN(SPIFFS_COPY_BUFFER_STACK,<sp/>len);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_MOVS,<sp/>fh,<sp/>src,<sp/>chunk_size,<sp/>b);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_MOVD,<sp/><sp/>fh,<sp/>dst,<sp/>chunk_size,<sp/>b);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>chunk_size;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>chunk_size;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>chunk_size;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>object<sp/>lookup<sp/>entry<sp/>containing<sp/>given<sp/>id<sp/>with<sp/>visitor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>object<sp/>lookup<sp/>pages<sp/>in<sp/>each<sp/>block<sp/>until<sp/>a<sp/>given<sp/>object<sp/>id<sp/>entry<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>found,<sp/>the<sp/>visitor<sp/>function<sp/>is<sp/>called<sp/>with<sp/>block<sp/>index,<sp/>entry<sp/>index<sp/>and<sp/>user<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>visitor<sp/>returns<sp/>SPIFFS_VIS_CONTINUE,<sp/>the<sp/>search<sp/>goes<sp/>on.<sp/>Otherwise,<sp/>the<sp/>search<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ended<sp/>and<sp/>visitor&apos;s<sp/>return<sp/>code<sp/>is<sp/>returned<sp/>to<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>visitor<sp/>is<sp/>given<sp/>(0)<sp/>the<sp/>search<sp/>returns<sp/>on<sp/>first<sp/>entry<sp/>with<sp/>matching<sp/>object<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>match<sp/>is<sp/>found<sp/>in<sp/>all<sp/>look<sp/>up,<sp/>SPIFFS_VIS_END<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>fs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>file<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>starting_block<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>starting<sp/>block<sp/>to<sp/>start<sp/>search<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>starting_lu_entry<sp/><sp/><sp/><sp/><sp/>the<sp/>look<sp/>up<sp/>index<sp/>entry<sp/>to<sp/>start<sp/>search<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ored<sp/>combination<sp/>of<sp/>SPIFFS_VIS_CHECK_ID,<sp/>SPIFFS_VIS_CHECK_PH,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VIS_NO_WRAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>obj_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument<sp/>object<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor<sp/>callback<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>user_const_p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any<sp/>const<sp/>pointer,<sp/>passed<sp/>to<sp/>the<sp/>callback<sp/>visitor<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>user_var_p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any<sp/>pointer,<sp/>passed<sp/>to<sp/>the<sp/>callback<sp/>visitor<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>block_ix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reported<sp/>block<sp/>index<sp/>where<sp/>match<sp/>was<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@param<sp/>lu_entry<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reported<sp/>look<sp/>up<sp/>index<sp/>where<sp/>match<sp/>was<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_entry_visitor(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>starting_block,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_lu_entry,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>flags,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_visitor_f<sp/>v,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>*block_ix,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lu_entry)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>s32_t<sp/>entry_count<sp/>=<sp/>fs-&gt;block_count<sp/>*<sp/>SPIFFS_OBJ_LOOKUP_MAX_ENTRIES(fs);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>cur_block<sp/>=<sp/>starting_block;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>u32_t<sp/>cur_block_addr<sp/>=<sp/>starting_block<sp/>*<sp/>SPIFFS_CFG_LOG_BLOCK_SZ(fs);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>*obj_lu_buf<sp/>=<sp/>(spiffs_obj_id<sp/>*)fs-&gt;lu_work;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_entry<sp/>=<sp/>starting_lu_entry;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entries_per_page<sp/>=<sp/>(SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>wrap<sp/>initial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_entry<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)SPIFFS_OBJ_LOOKUP_MAX_ENTRIES(fs)<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_entry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_block++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_block_addr<sp/>=<sp/>cur_block<sp/>*<sp/>SPIFFS_CFG_LOG_BLOCK_SZ(fs);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_block<sp/>&gt;=<sp/>fs-&gt;block_count)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>SPIFFS_VIS_NO_WRAP)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_END;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>wrap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_block<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_block_addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>each<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK<sp/>&amp;&amp;<sp/>entry_count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obj_lookup_page<sp/>=<sp/>cur_entry<sp/>/<sp/>entries_per_page;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>each<sp/>object<sp/>lookup<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK<sp/>&amp;&amp;<sp/>obj_lookup_page<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)SPIFFS_OBJ_LOOKUP_PAGES(fs))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry_offset<sp/>=<sp/>obj_lookup_page<sp/>*<sp/>entries_per_page;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>cur_block_addr<sp/>+<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>obj_lookup_page),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;lu_work);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>each<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_entry<sp/>-<sp/>entry_offset<sp/>&lt;<sp/>entries_per_page<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>non-last<sp/>obj<sp/>lookup<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_entry<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)SPIFFS_OBJ_LOOKUP_MAX_ENTRIES(fs))<sp/></highlight><highlight class="comment">//<sp/>for<sp/>last<sp/>obj<sp/>lookup<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>SPIFFS_VIS_CHECK_ID)<sp/>==<sp/>0<sp/>||<sp/>obj_lu_buf[cur_entry-entry_offset]<sp/>==<sp/>obj_id)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block_ix)<sp/>*block_ix<sp/>=<sp/>cur_block;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lu_entry)<sp/>*lu_entry<sp/>=<sp/>cur_entry;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>v(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flags<sp/>&amp;<sp/>SPIFFS_VIS_CHECK_PH)<sp/>?<sp/>obj_id<sp/>:<sp/>obj_lu_buf[cur_entry-entry_offset],</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_block,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_entry,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_const_p,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_var_p);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_COUNTINUE<sp/>||<sp/>res<sp/>==<sp/>SPIFFS_VIS_COUNTINUE_RELOAD)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_COUNTINUE_RELOAD)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>cur_block_addr<sp/>+<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>obj_lookup_page),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;lu_work);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_entry++;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry_count--;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry_count--;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_entry++;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>per<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_lookup_page++;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>per<sp/>object<sp/>lookup<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_entry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_block++;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_block_addr<sp/>+=<sp/>SPIFFS_CFG_LOG_BLOCK_SZ(fs);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_block<sp/>&gt;=<sp/>fs-&gt;block_count)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>SPIFFS_VIS_NO_WRAP)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_END;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>wrap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_block<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_block_addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>per<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_END;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">s32_t<sp/>spiffs_erase_block(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>u32_t<sp/>addr<sp/>=<sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>bix);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>s32_t<sp/>size<sp/>=<sp/>SPIFFS_CFG_LOG_BLOCK_SZ(fs);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>we<sp/>ignore<sp/>res,<sp/>just<sp/>try<sp/>erasing<sp/>the<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;erase<sp/>&quot;</highlight><highlight class="normal">_SPIPRIad</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>addr,<sp/><sp/>SPIFFS_CFG_PHYS_ERASE_SZ(fs));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_HAL_ERASE(fs,<sp/>addr,<sp/>SPIFFS_CFG_PHYS_ERASE_SZ(fs));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>+=<sp/>SPIFFS_CFG_PHYS_ERASE_SZ(fs);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>-=<sp/>SPIFFS_CFG_PHYS_ERASE_SZ(fs);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>fs-&gt;free_blocks++;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>erase<sp/>count<sp/>for<sp/>this<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_C_WRTHRU<sp/>|<sp/>SPIFFS_OP_T_OBJ_LU2,<sp/>0,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_ERASE_COUNT_PADDR(fs,<sp/>bix),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t<sp/>*)&amp;fs-&gt;max_erase_count);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_USE_MAGIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finally,<sp/>write<sp/>magic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>magic<sp/>=<sp/>SPIFFS_MAGIC(fs,<sp/>bix);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_C_WRTHRU<sp/>|<sp/>SPIFFS_OP_T_OBJ_LU2,<sp/>0,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_MAGIC_PADDR(fs,<sp/>bix),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t<sp/>*)&amp;magic);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>fs-&gt;max_erase_count++;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fs-&gt;max_erase_count<sp/>==<sp/>SPIFFS_OBJ_ID_IX_FLAG)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>fs-&gt;max_erase_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_USE_MAGIC<sp/>&amp;&amp;<sp/>SPIFFS_USE_MAGIC_LENGTH<sp/>&amp;&amp;<sp/>SPIFFS_SINGLETON==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">s32_t<sp/>spiffs_probe(</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__config" kindref="compound">spiffs_config</ref><sp/>*cfg)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>u32_t<sp/>paddr;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>dummy_fs;<sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>dummy<sp/>fs<sp/>struct<sp/>just<sp/>to<sp/>be<sp/>able<sp/>to<sp/>use<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>_SPIFFS_MEMCPY(&amp;dummy_fs.cfg,<sp/>cfg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structspiffs__config" kindref="compound">spiffs_config</ref>));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>dummy_fs.block_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>three<sp/>magics,<sp/>as<sp/>one<sp/>block<sp/>may<sp/>be<sp/>in<sp/>an<sp/>aborted<sp/>erase<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>least<sp/>two<sp/>of<sp/>these<sp/>must<sp/>contain<sp/>magic<sp/>and<sp/>be<sp/>in<sp/>decreasing<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>magic[3];</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>bix_count[3];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bix<sp/>=<sp/>0;<sp/>bix<sp/>&lt;<sp/>3;<sp/>bix++)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>paddr<sp/>=<sp/>SPIFFS_MAGIC_PADDR(&amp;dummy_fs,<sp/>bix);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_HAL_CALLBACK_EXTRA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>any<sp/>proper<sp/>fs<sp/>to<sp/>report<sp/>here,<sp/>so<sp/>callback<sp/>with<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(cross<sp/>fingers<sp/>that<sp/>no-one<sp/>gets<sp/>angry)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>cfg-&gt;hal_read_f((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)0,<sp/>paddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t<sp/>*)&amp;magic[bix]);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>cfg-&gt;hal_read_f(paddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t<sp/>*)&amp;magic[bix]);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>bix_count[bix]<sp/>=<sp/>magic[bix]<sp/>^<sp/>SPIFFS_MAGIC(&amp;dummy_fs,<sp/>0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>have<sp/>sane<sp/>number<sp/>of<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bix_count[0]<sp/>&lt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_PROBE_TOO_FEW_BLOCKS;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>order<sp/>is<sp/>correct,<sp/>take<sp/>aborted<sp/>erases<sp/>in<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>block<sp/>aborted<sp/>erase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magic[0]<sp/>==<sp/>(spiffs_obj_id)(-1)<sp/>&amp;&amp;<sp/>bix_count[1]<sp/>-<sp/>bix_count[2]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bix_count[1]+1)<sp/>*<sp/>cfg-&gt;log_block_size;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>block<sp/>aborted<sp/>erase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magic[1]<sp/>==<sp/>(spiffs_obj_id)(-1)<sp/>&amp;&amp;<sp/>bix_count[0]<sp/>-<sp/>bix_count[2]<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bix_count[0]<sp/>*<sp/>cfg-&gt;log_block_size;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>block<sp/>aborted<sp/>erase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magic[2]<sp/>==<sp/>(spiffs_obj_id)(-1)<sp/>&amp;&amp;<sp/>bix_count[0]<sp/>-<sp/>bix_count[1]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bix_count[0]<sp/>*<sp/>cfg-&gt;log_block_size;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>block<sp/>has<sp/>aborted<sp/>erase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bix_count[0]<sp/>-<sp/>bix_count[1]<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>bix_count[1]<sp/>-<sp/>bix_count[2]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bix_count[0]<sp/>*<sp/>cfg-&gt;log_block_size;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_PROBE_NOT_A_FS;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SPIFFS_USE_MAGIC<sp/>&amp;&amp;<sp/>SPIFFS_USE_MAGIC_LENGTH<sp/>&amp;&amp;<sp/>SPIFFS_SINGLETON==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_obj_lu_scan_v(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix_entry,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>(void)bix;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>(void)user_const_p;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>(void)user_var_p;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj_id<sp/>==<sp/>SPIFFS_OBJ_ID_FREE)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ix_entry<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;free_blocks++;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>optimize<sp/>further,<sp/>return<sp/>SPIFFS_NEXT_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj_id<sp/>==<sp/>SPIFFS_OBJ_ID_DELETED)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>fs-&gt;stats_p_deleted++;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>fs-&gt;stats_p_allocated++;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_COUNTINUE;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scans<sp/>thru<sp/>all<sp/>obj<sp/>lu<sp/>and<sp/>counts<sp/>free,<sp/>deleted<sp/>and<sp/>used<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>maximum<sp/>block<sp/>erase<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checks<sp/>magic<sp/>if<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_scan(</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_USE_MAGIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>unerased_bix<sp/>=<sp/>(spiffs_block_ix)-1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>out<sp/>erase<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>enabled,<sp/>check<sp/>magic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>bix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>erase_count_final;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>erase_count_min<sp/>=<sp/>SPIFFS_OBJ_ID_FREE;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>erase_count_max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bix<sp/>&lt;<sp/>fs-&gt;block_count)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_USE_MAGIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>magic;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_MAGIC_PADDR(fs,<sp/>bix)<sp/>,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t<sp/>*)&amp;magic);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magic<sp/>!=<sp/>SPIFFS_MAGIC(fs,<sp/>bix))<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unerased_bix<sp/>==<sp/>(spiffs_block_ix)-1)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>one<sp/>unerased<sp/>block<sp/>as<sp/>it<sp/>might<sp/>be<sp/>powered<sp/>down<sp/>during<sp/>an<sp/>erase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unerased_bix<sp/>=<sp/>bix;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>than<sp/>one<sp/>unerased<sp/>block,<sp/>bail<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(SPIFFS_ERR_NOT_A_FS);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>erase_count;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_ERASE_COUNT_PADDR(fs,<sp/>bix)<sp/>,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t<sp/>*)&amp;erase_count);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(erase_count<sp/>!=<sp/>SPIFFS_OBJ_ID_FREE)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>erase_count_min<sp/>=<sp/>MIN(erase_count_min,<sp/>erase_count);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>erase_count_max<sp/>=<sp/>MAX(erase_count_max,<sp/>erase_count);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>bix++;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(erase_count_min<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>erase_count_max<sp/>==<sp/>SPIFFS_OBJ_ID_FREE)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>system,<sp/>set<sp/>counter<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>erase_count_final<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(erase_count_max<sp/>-<sp/>erase_count_min<sp/>&gt;<sp/>(SPIFFS_OBJ_ID_FREE)/2)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrap,<sp/>take<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>erase_count_final<sp/>=<sp/>erase_count_min+1;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>erase_count_final<sp/>=<sp/>erase_count_max+1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>fs-&gt;max_erase_count<sp/>=<sp/>erase_count_final;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_USE_MAGIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unerased_bix<sp/>!=<sp/>(spiffs_block_ix)-1)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>one<sp/>unerased<sp/>block,<sp/>remedy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;mount:<sp/>erase<sp/>block<sp/>&quot;</highlight><highlight class="normal">_SPIPRIbl</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>bix);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_ERR_RO_ABORTED_OPERATION;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_erase_block(fs,<sp/>unerased_bix);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>fs-&gt;free_blocks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>fs-&gt;stats_p_allocated<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>fs-&gt;stats_p_deleted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(fs,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_obj_lu_scan_v,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bix,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;entry);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>free<sp/>object<sp/>lookup<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>object<sp/>lookup<sp/>pages<sp/>in<sp/>each<sp/>block<sp/>until<sp/>a<sp/>free<sp/>object<sp/>id<sp/>entry<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_free(</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>starting_block,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_lu_entry,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>*block_ix,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lu_entry)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs-&gt;cleaning<sp/>&amp;&amp;<sp/>fs-&gt;free_blocks<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_gc_quick(fs,<sp/>0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_ERR_NO_DELETED_BLOCKS)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fs-&gt;free_blocks<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_FULL;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_id(fs,<sp/>starting_block,<sp/>starting_lu_entry,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_OBJ_ID_FREE,<sp/>block_ix,<sp/>lu_entry);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>fs-&gt;free_cursor_block_ix<sp/>=<sp/>*block_ix;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>fs-&gt;free_cursor_obj_lu_entry<sp/>=<sp/>(*lu_entry)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*lu_entry<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;free_blocks--;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_ERR_FULL)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;fs<sp/>full\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>object<sp/>lookup<sp/>entry<sp/>containing<sp/>given<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>object<sp/>lookup<sp/>pages<sp/>in<sp/>each<sp/>block<sp/>until<sp/>a<sp/>given<sp/>object<sp/>id<sp/>entry<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_id(</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>starting_block,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starting_lu_entry,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>*block_ix,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lu_entry)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs,<sp/>starting_block,<sp/>starting_lu_entry,<sp/>SPIFFS_VIS_CHECK_ID,<sp/>obj_id,<sp/>0,<sp/>0,<sp/>0,<sp/>block_ix,<sp/>lu_entry);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_ERR_NOT_FOUND;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_obj_lu_find_id_and_span_v(</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix_entry,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>ph;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>ix_entry);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>0,<sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),<sp/>(u8_t<sp/>*)&amp;ph);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ph.obj_id<sp/>==<sp/>obj_id<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ph.span_ix<sp/>==<sp/>*((spiffs_span_ix*)user_var_p)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(ph.flags<sp/>&amp;<sp/>(SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_USED))<sp/>==<sp/>SPIFFS_PH_FLAG_DELET<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!((obj_id<sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG)<sp/>&amp;&amp;<sp/>(ph.flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_IXDELE)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ph.span_ix<sp/>==<sp/>0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(user_const_p<sp/>==<sp/>0<sp/>||<sp/>*((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>spiffs_page_ix*)user_const_p)<sp/>!=<sp/>pix))<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_COUNTINUE;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>object<sp/>lookup<sp/>entry<sp/>containing<sp/>given<sp/>id<sp/>and<sp/>span<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>object<sp/>lookup<sp/>pages<sp/>in<sp/>each<sp/>block<sp/>until<sp/>a<sp/>given<sp/>object<sp/>id<sp/>entry<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_id_and_span(</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_span_ix<sp/>spix,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>exclusion_pix,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(fs,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_block_ix,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_obj_lu_entry,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VIS_CHECK_ID,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_id,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_obj_lu_find_id_and_span_v,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exclusion_pix<sp/>?<sp/>&amp;exclusion_pix<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;spix,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bix,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;entry);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_ERR_NOT_FOUND;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>*pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>fs-&gt;cursor_block_ix<sp/>=<sp/>bix;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>fs-&gt;cursor_obj_lu_entry<sp/>=<sp/>entry;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>object<sp/>lookup<sp/>entry<sp/>containing<sp/>given<sp/>id<sp/>and<sp/>span<sp/>index<sp/>in<sp/>page<sp/>headers<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>object<sp/>lookup<sp/>pages<sp/>in<sp/>each<sp/>block<sp/>until<sp/>a<sp/>given<sp/>object<sp/>id<sp/>entry<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_id_and_span_by_phdr(</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_span_ix<sp/>spix,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>exclusion_pix,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(fs,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_block_ix,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_obj_lu_entry,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VIS_CHECK_PH,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_id,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_obj_lu_find_id_and_span_v,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exclusion_pix<sp/>?<sp/>&amp;exclusion_pix<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;spix,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bix,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;entry);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_ERR_NOT_FOUND;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>*pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>fs-&gt;cursor_block_ix<sp/>=<sp/>bix;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>fs-&gt;cursor_obj_lu_entry<sp/>=<sp/>entry;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>update<sp/>index<sp/>map<sp/>of<sp/>given<sp/>fd<sp/>with<sp/>given<sp/>object<sp/>index<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_update_ix_map(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,<sp/>spiffs_span_ix<sp/>objix_spix,<sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_SINGLETON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>(void)fs;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__ix__map" kindref="compound">spiffs_ix_map</ref><sp/>*map<sp/>=<sp/>fd-&gt;ix_map;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>map_objix_start_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>map-&gt;start_spix);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>map_objix_end_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>map-&gt;end_spix);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>updated<sp/>ix<sp/>is<sp/>within<sp/>map<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objix_spix<sp/>&lt;<sp/>map_objix_start_spix<sp/>||<sp/>objix_spix<sp/>&gt;<sp/>map_objix_end_spix)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>memory<sp/>mapped<sp/>page<sp/>index<sp/>buffer<sp/>to<sp/>new<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>range<sp/>of<sp/>updated<sp/>object<sp/>index<sp/>map<sp/>data<sp/>span<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>objix_data_spix_start<sp/>=</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DATA_SPAN_IX_FOR_OBJ_IX_SPAN_IX(fs,<sp/>objix_spix);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>objix_data_spix_end<sp/>=<sp/>objix_data_spix_start<sp/>+</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(objix_spix<sp/>==<sp/>0<sp/>?<sp/>SPIFFS_OBJ_HDR_IX_LEN(fs)<sp/>:<sp/>SPIFFS_OBJ_IX_LEN(fs));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calc<sp/>union<sp/>of<sp/>object<sp/>index<sp/>range<sp/>and<sp/>index<sp/>map<sp/>range<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>map_spix<sp/>=<sp/>MAX(map-&gt;start_spix,<sp/>objix_data_spix_start);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>map_spix_end<sp/>=<sp/>MIN(map-&gt;end_spix<sp/>+<sp/>1,<sp/>objix_data_spix_end);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(map_spix<sp/>&lt;<sp/>map_spix_end)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>objix_data_pix;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objix_data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[map_spix];</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objix_data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>map_spix)];</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objix_data_pix<sp/>==<sp/>(spiffs_page_ix)-1)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reached<sp/>end<sp/>of<sp/>object,<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>map-&gt;map_buf[map_spix<sp/>-<sp/>map-&gt;start_spix]<sp/>=<sp/>objix_data_pix;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;map<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;)<sp/>objix.spix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>pix<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;obj_id,<sp/>map_spix<sp/>-<sp/>map-&gt;start_spix,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map-&gt;start_spix,<sp/>map-&gt;end_spix,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix-&gt;p_hdr.span_ix,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix_data_pix);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>map_spix++;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="structspiffs__ix__map__populate__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>u32_t<sp/>remaining_objix_pages_to_visit;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>map_objix_start_spix;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>map_objix_end_spix;</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}<sp/><ref refid="structspiffs__ix__map__populate__state" kindref="compound">spiffs_ix_map_populate_state</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_populate_ix_map_v(</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix_entry,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>(void)user_const_p;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__ix__map__populate__state" kindref="compound">spiffs_ix_map_populate_state</ref><sp/>*state<sp/>=<sp/>(<ref refid="structspiffs__ix__map__populate__state" kindref="compound">spiffs_ix_map_populate_state</ref><sp/>*)user_var_p;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>ix_entry);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>header<sp/>to<sp/>check<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>),<sp/>(u8_t<sp/>*)objix);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix-&gt;p_hdr,<sp/>obj_id,<sp/>objix-&gt;p_hdr.span_ix);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>hdr<sp/>is<sp/>ok,<sp/>and<sp/>if<sp/>objix<sp/>range<sp/>overlap<sp/>with<sp/>ix<sp/>map<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((objix-&gt;p_hdr.flags<sp/>&amp;<sp/>(SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_IXDELE))<sp/>==</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_IXDELE)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objix-&gt;p_hdr.span_ix<sp/>&gt;=<sp/>state-&gt;map_objix_start_spix<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objix-&gt;p_hdr.span_ix<sp/>&lt;=<sp/>state-&gt;map_objix_end_spix)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ok,<sp/>load<sp/>rest<sp/>of<sp/>object<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>),</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>),</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_update_ix_map(fs,<sp/>state-&gt;fd,<sp/>objix-&gt;p_hdr.span_ix,<sp/>objix);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;remaining_objix_pages_to_visit--;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;map<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;)<sp/>remaining<sp/>objix<sp/>pages<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;fd-&gt;ix_map-&gt;start_spix,<sp/>state-&gt;fd-&gt;ix_map-&gt;end_spix,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;remaining_objix_pages_to_visit);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>state-&gt;remaining_objix_pages_to_visit<sp/>?<sp/>SPIFFS_VIS_COUNTINUE<sp/>:<sp/>SPIFFS_VIS_END;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">//<sp/>populates<sp/>index<sp/>map,<sp/>from<sp/>vector<sp/>entry<sp/>start<sp/>to<sp/>vector<sp/>entry<sp/>end,<sp/>inclusive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">s32_t<sp/>spiffs_populate_ix_map(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,<sp/>u32_t<sp/>vec_entry_start,<sp/>u32_t<sp/>vec_entry_end)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__ix__map" kindref="compound">spiffs_ix_map</ref><sp/>*map<sp/>=<sp/>fd-&gt;ix_map;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__ix__map__populate__state" kindref="compound">spiffs_ix_map_populate_state</ref><sp/>state;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>vec_entry_start<sp/>=<sp/>MIN((u32_t)(map-&gt;end_spix<sp/>-<sp/>map-&gt;start_spix),<sp/>vec_entry_start);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>vec_entry_end<sp/>=<sp/>MAX((u32_t)(map-&gt;end_spix<sp/>-<sp/>map-&gt;start_spix),<sp/>vec_entry_end);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vec_entry_start<sp/>&gt;<sp/>vec_entry_end)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_IX_MAP_BAD_RANGE;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>state.map_objix_start_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>map-&gt;start_spix<sp/>+<sp/>vec_entry_start);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>state.map_objix_end_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>map-&gt;start_spix<sp/>+<sp/>vec_entry_end);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>state.remaining_objix_pages_to_visit<sp/>=</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.map_objix_end_spix<sp/>-<sp/>state.map_objix_start_spix<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>state.fd<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_BLOCK_FOR_PAGE(fs,<sp/>fd-&gt;objix_hdr_pix),</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE(fs,<sp/>fd-&gt;objix_hdr_pix),</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VIS_CHECK_ID,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_populate_ix_map_v,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;state,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocates<sp/>a<sp/>free<sp/>defined<sp/>page<sp/>with<sp/>given<sp/>obj_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Occupies<sp/>object<sp/>lookup<sp/>entry<sp/>and<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>data<sp/>may<sp/>be<sp/>NULL;<sp/>where<sp/>only<sp/>page<sp/>header<sp/>is<sp/>stored,<sp/>len<sp/>and<sp/>page_offs<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal">s32_t<sp/>spiffs_page_allocate_data(</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>*ph,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*data,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>page_offs,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>finalize,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>free<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_free(fs,<sp/>fs-&gt;free_cursor_block_ix,<sp/>fs-&gt;free_cursor_obj_lu_entry,<sp/>&amp;bix,<sp/>&amp;entry);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>occupy<sp/>page<sp/>in<sp/>object<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_LU<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>bix)<sp/>+<sp/>entry<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t*)&amp;obj_id);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>fs-&gt;stats_p_allocated++;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>page<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>ph-&gt;flags<sp/>&amp;=<sp/>~SPIFFS_PH_FLAG_USED;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PADDR(fs,<sp/>bix,<sp/>entry),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),<sp/>(u8_t*)ph);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>page<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/><sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,SPIFFS_OBJ_LOOKUP_ENTRY_TO_PADDR(fs,<sp/>bix,<sp/>entry)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)<sp/>+<sp/>page_offs,<sp/>len,<sp/>data);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finalize<sp/>header<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalize<sp/>&amp;&amp;<sp/>(ph-&gt;flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_FINAL))<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>ph-&gt;flags<sp/>&amp;=<sp/>~SPIFFS_PH_FLAG_FINAL;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PADDR(fs,<sp/>bix,<sp/>entry)<sp/>+<sp/>offsetof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>,<sp/>flags),</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8_t),</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;ph-&gt;flags);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>written<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>*pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Moves<sp/>a<sp/>page<sp/>from<sp/>src<sp/>to<sp/>a<sp/>free<sp/>page<sp/>and<sp/>finalizes<sp/>it.<sp/>Updates<sp/>page<sp/>index.<sp/>Page<sp/>data<sp/>is<sp/>given<sp/>in<sp/>param<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>page<sp/>data<sp/>is<sp/>null,<sp/>provided<sp/>header<sp/>is<sp/>used<sp/>for<sp/>metainfo<sp/>and<sp/>page<sp/>data<sp/>is<sp/>physically<sp/>copied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal">s32_t<sp/>spiffs_page_move(</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_file<sp/>fh,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*page_data,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>*page_hdr,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>src_pix,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*dst_pix)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>u8_t<sp/>was_final<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>*p_hdr;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>free_pix;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>free<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_free(fs,<sp/>fs-&gt;free_cursor_block_ix,<sp/>fs-&gt;free_cursor_obj_lu_entry,<sp/>&amp;bix,<sp/>&amp;entry);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>free_pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst_pix)<sp/>*dst_pix<sp/>=<sp/>free_pix;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>p_hdr<sp/>=<sp/>page_data<sp/>?<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>*)page_data<sp/>:<sp/>page_hdr;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page_data)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>got<sp/>page<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>was_final<sp/>=<sp/>(p_hdr-&gt;flags<sp/>&amp;<sp/>SPIFFS_PH_FLAG_FINAL)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>unfinalized<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>p_hdr-&gt;flags<sp/>|=<sp/>SPIFFS_PH_FLAG_FINAL;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>p_hdr-&gt;flags<sp/>&amp;=<sp/>~SPIFFS_PH_FLAG_USED;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>free_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>page_data);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>page<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_phys_cpy(fs,<sp/>fh,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>free_pix),<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>src_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>entry<sp/>in<sp/>destination<sp/>object<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_LU<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>SPIFFS_BLOCK_FOR_PAGE(fs,<sp/>free_pix))<sp/>+<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE(fs,<sp/>free_pix)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_page_ix),</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;obj_id);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>fs-&gt;stats_p_allocated++;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(was_final)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>finalized<sp/>in<sp/>destination<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>p_hdr-&gt;flags<sp/>&amp;=<sp/>~(SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_USED);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fh,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>free_pix)<sp/>+<sp/>offsetof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>,<sp/>flags),</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8_t),</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;p_hdr-&gt;flags);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>source<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_page_delete(fs,<sp/>src_pix);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>a<sp/>page<sp/>and<sp/>removes<sp/>it<sp/>from<sp/>object<sp/>lookup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal">s32_t<sp/>spiffs_page_delete(</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>deleted<sp/>entry<sp/>in<sp/>source<sp/>object<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>d_obj_id<sp/>=<sp/>SPIFFS_OBJ_ID_DELETED;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_LU<sp/>|<sp/>SPIFFS_OP_C_DELE,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>SPIFFS_BLOCK_FOR_PAGE(fs,<sp/>pix))<sp/>+<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE(fs,<sp/>pix)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_page_ix),</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;d_obj_id);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>fs-&gt;stats_p_deleted++;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>fs-&gt;stats_p_allocated--;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>deleted<sp/>in<sp/>source<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>u8_t<sp/>flags<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_NO_BLIND_WRITES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix)<sp/>+<sp/>offsetof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>,<sp/>flags),</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(flags),<sp/>&amp;flags);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>flags<sp/>&amp;=<sp/>~(SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_USED);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_DELE,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix)<sp/>+<sp/>offsetof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>,<sp/>flags),</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(flags),<sp/>&amp;flags);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>object<sp/>index<sp/>header<sp/>page<sp/>with<sp/>empty<sp/>index<sp/>and<sp/>undefined<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal">s32_t<sp/>spiffs_object_create(</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>name[],</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>meta[],</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_type<sp/>type,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*objix_hdr_pix)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>oix_hdr;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_gc_check(fs,<sp/>SPIFFS_DATA_PAGE_SIZE(fs));</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>obj_id<sp/>|=<sp/>SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>free<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_free(fs,<sp/>fs-&gt;free_cursor_block_ix,<sp/>fs-&gt;free_cursor_obj_lu_entry,<sp/>&amp;bix,<sp/>&amp;entry);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;create:<sp/>found<sp/>free<sp/>page<sp/>@<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>bix:&quot;</highlight><highlight class="normal">_SPIPRIbl</highlight><highlight class="stringliteral">&quot;<sp/>entry:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>(spiffs_page_ix)SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry),<sp/>bix,<sp/>entry);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>occupy<sp/>page<sp/>in<sp/>object<sp/>lookup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_LU<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>bix)<sp/>+<sp/>entry<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t*)&amp;obj_id);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>fs-&gt;stats_p_allocated++;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>empty<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>oix_hdr.p_hdr.obj_id<sp/>=<sp/>obj_id;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>oix_hdr.p_hdr.span_ix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>oix_hdr.p_hdr.flags<sp/>=<sp/>0xff<sp/>&amp;<sp/>~(SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_INDEX<sp/>|<sp/>SPIFFS_PH_FLAG_USED);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>oix_hdr.type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>oix_hdr.size<sp/>=<sp/>SPIFFS_UNDEFINED_LEN;<sp/></highlight><highlight class="comment">//<sp/>keep<sp/>ones<sp/>so<sp/>we<sp/>can<sp/>update<sp/>later<sp/>without<sp/>wasting<sp/>this<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>strncpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)oix_hdr.name,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)name,<sp/>SPIFFS_OBJ_NAME_LEN);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_OBJ_META_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meta)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>_SPIFFS_MEMCPY(oix_hdr.meta,<sp/>meta,<sp/>SPIFFS_OBJ_META_LEN);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(oix_hdr.meta,<sp/>0xff,<sp/>SPIFFS_OBJ_META_LEN);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>(void)<sp/>meta;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PADDR(fs,<sp/>bix,<sp/>entry),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>),<sp/>(u8_t*)&amp;oix_hdr);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)&amp;oix_hdr,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_NEW,<sp/>obj_id,<sp/>0,<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry),<sp/>SPIFFS_UNDEFINED_LEN);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objix_hdr_pix)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>*objix_hdr_pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>header<sp/>with<sp/>any<sp/>combination<sp/>of<sp/>name/size/index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="comment">//<sp/>new_objix_hdr_data<sp/>may<sp/>be<sp/>null,<sp/>if<sp/>so<sp/>the<sp/>object<sp/>index<sp/>header<sp/>page<sp/>is<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="comment">//<sp/>name<sp/>may<sp/>be<sp/>null,<sp/>if<sp/>so<sp/>name<sp/>is<sp/>not<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">//<sp/>size<sp/>may<sp/>be<sp/>null,<sp/>if<sp/>so<sp/>size<sp/>is<sp/>not<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal">s32_t<sp/>spiffs_object_update_index_hdr(</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>objix_hdr_pix,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*new_objix_hdr_data,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>name[],</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>meta[],</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>size,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*new_pix)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*objix_hdr;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>new_objix_hdr_pix;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>obj_id<sp/>|=<sp/><sp/>SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_objix_hdr_data)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>index<sp/>header<sp/>page<sp/>already<sp/>given<sp/>to<sp/>us,<sp/>no<sp/>need<sp/>to<sp/>load<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>objix_hdr<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*)new_objix_hdr_data;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>objix_hdr_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>objix_hdr<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix_hdr-&gt;p_hdr,<sp/>obj_id,<sp/>0);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)objix_hdr-&gt;name,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)name,<sp/>SPIFFS_OBJ_NAME_LEN);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_OBJ_META_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(meta)<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>_SPIFFS_MEMCPY(objix_hdr-&gt;meta,<sp/>meta,<sp/>SPIFFS_OBJ_META_LEN);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>(void)<sp/>meta;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size)<sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>objix_hdr-&gt;size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>and<sp/>update<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_page_move(fs,<sp/>fd<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>fd-&gt;file_nbr,<sp/>(u8_t*)objix_hdr,<sp/>obj_id,<sp/>0,<sp/>objix_hdr_pix,<sp/>&amp;new_objix_hdr_pix);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_pix)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*new_pix<sp/>=<sp/>new_objix_hdr_pix;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callback<sp/>on<sp/>object<sp/>index<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)objix_hdr,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_objix_hdr_data<sp/>?<sp/>SPIFFS_EV_IX_UPD<sp/>:<sp/>SPIFFS_EV_IX_UPD_HDR,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj_id,<sp/>objix_hdr-&gt;p_hdr.span_ix,<sp/>new_objix_hdr_pix,<sp/>objix_hdr-&gt;size);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd)<sp/>fd-&gt;objix_hdr_pix<sp/>=<sp/>new_objix_hdr_pix;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>not<sp/>in<sp/>the<sp/>registered<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_cb_object_event(</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ev,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id_raw,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_span_ix<sp/>spix,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>new_pix,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>new_size)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>(void)objix;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>index<sp/>caches<sp/>in<sp/>all<sp/>file<sp/>descriptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>obj_id<sp/>=<sp/>obj_id_raw<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>u32_t<sp/>i;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fds<sp/>=<sp/>(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*)fs-&gt;fd_space;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>CALLBACK<sp/><sp/>%s<sp/>obj_id:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>spix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>npix:&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>nsz:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*[]){</highlight><highlight class="stringliteral">&quot;UPD&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NEW&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MOV&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HUP&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;???&quot;</highlight><highlight class="normal">}[MIN(ev,5)],</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj_id_raw,<sp/>spix,<sp/>new_pix,<sp/>new_size);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fs-&gt;fd_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*cur_fd<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cur_fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG)<sp/>!=<sp/>obj_id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fd<sp/>not<sp/>related<sp/>to<sp/>updated<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_TEMPORAL_FD_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;file_nbr<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>fd<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spix<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>object<sp/>index<sp/>header<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev<sp/>!=<sp/>SPIFFS_EV_IX_DEL)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_TEMPORAL_FD_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;score<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>never<sp/>used<sp/>fd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback:<sp/>setting<sp/>fd<sp/>&quot;</highlight><highlight class="normal">_SPIPRIfd</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;(fdoffs:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>offs:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;)<sp/>objix_hdr_pix<sp/>to<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;,<sp/>size:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_FH_OFFS(fs,<sp/>cur_fd-&gt;file_nbr),<sp/>cur_fd-&gt;obj_id,<sp/>cur_fd-&gt;fdoffset,<sp/>cur_fd-&gt;offset,<sp/>new_pix,<sp/>new_size);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;objix_hdr_pix<sp/>=<sp/>new_pix;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>size<sp/>and<sp/>offsets<sp/>for<sp/>fds<sp/>to<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;size<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>act_new_size<sp/>=<sp/>new_size<sp/>==<sp/>SPIFFS_UNDEFINED_LEN<sp/>?<sp/>0<sp/>:<sp/>new_size;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE_WR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(act_new_size<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>cur_fd-&gt;cache_page)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>act_new_size<sp/>=<sp/>MAX(act_new_size,<sp/>cur_fd-&gt;cache_page-&gt;offset<sp/>+<sp/>cur_fd-&gt;cache_page-&gt;size);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;offset<sp/>&gt;<sp/>act_new_size)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;offset<sp/>=<sp/>act_new_size;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;fdoffset<sp/>&gt;<sp/>act_new_size)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;fdoffset<sp/>=<sp/>act_new_size;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE_WR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;cache_page<sp/>&amp;&amp;<sp/>cur_fd-&gt;cache_page-&gt;offset<sp/>&gt;<sp/>act_new_size+1)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CACHE_DBG(</highlight><highlight class="stringliteral">&quot;CACHE_DROP:<sp/>file<sp/>trunced,<sp/>dropping<sp/>cache<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>no<sp/>writeback\n&quot;</highlight><highlight class="normal">,<sp/>cur_fd-&gt;cache_page-&gt;ix);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cache_fd_release(fs,<sp/>cur_fd-&gt;cache_page);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removing<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_CACHE_WR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;file_nbr<sp/>&amp;&amp;<sp/>cur_fd-&gt;cache_page)<sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CACHE_DBG(</highlight><highlight class="stringliteral">&quot;CACHE_DROP:<sp/>file<sp/>deleted,<sp/>dropping<sp/>cache<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>no<sp/>writeback\n&quot;</highlight><highlight class="normal">,<sp/>cur_fd-&gt;cache_page-&gt;ix);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cache_fd_release(fs,<sp/>cur_fd-&gt;cache_page);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback:<sp/>release<sp/>fd<sp/>&quot;</highlight><highlight class="normal">_SPIPRIfd</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>span:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>objix_pix<sp/>to<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>SPIFFS_FH_OFFS(fs,<sp/>cur_fd-&gt;file_nbr),<sp/>cur_fd-&gt;obj_id,<sp/>spix,<sp/>new_pix);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;file_nbr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;obj_id<sp/>=<sp/>SPIFFS_OBJ_ID_DELETED;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>object<sp/>index<sp/>header<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;cursor_objix_spix<sp/>==<sp/>spix)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev<sp/>!=<sp/>SPIFFS_EV_IX_DEL)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback:<sp/>setting<sp/>fd<sp/>&quot;</highlight><highlight class="normal">_SPIPRIfd</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>span:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>objix_pix<sp/>to<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>SPIFFS_FH_OFFS(fs,<sp/>cur_fd-&gt;file_nbr),<sp/>cur_fd-&gt;obj_id,<sp/>spix,<sp/>new_pix);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;cursor_objix_pix<sp/>=<sp/>new_pix;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;cursor_objix_pix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>fd<sp/>update<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>index<sp/>maps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev<sp/>==<sp/>SPIFFS_EV_IX_UPD<sp/>||<sp/>ev<sp/>==<sp/>SPIFFS_EV_IX_NEW)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fs-&gt;fd_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*cur_fd<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>fd<sp/>opened,<sp/>having<sp/>ix<sp/>map,<sp/>match<sp/>obj<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;file_nbr<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;ix_map<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cur_fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG)<sp/>!=<sp/>obj_id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback:<sp/>map<sp/>ix<sp/>update<sp/>fd<sp/>&quot;</highlight><highlight class="normal">_SPIPRIfd</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>span:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>SPIFFS_FH_OFFS(fs,<sp/>cur_fd-&gt;file_nbr),<sp/>cur_fd-&gt;obj_id,<sp/>spix);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_update_ix_map(fs,<sp/>cur_fd,<sp/>spix,<sp/>objix);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>callback<sp/>to<sp/>user<sp/>if<sp/>object<sp/>index<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fs-&gt;file_cb_f<sp/>&amp;&amp;<sp/>spix<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(obj_id_raw<sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG))<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_fileop_type<sp/>op;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev<sp/>==<sp/>SPIFFS_EV_IX_NEW)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>SPIFFS_CB_CREATED;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev<sp/>==<sp/>SPIFFS_EV_IX_UPD<sp/>||</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>==<sp/>SPIFFS_EV_IX_MOV<sp/>||</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>==<sp/>SPIFFS_EV_IX_UPD_HDR)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>SPIFFS_CB_UPDATED;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev<sp/>==<sp/>SPIFFS_EV_IX_DEL)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>op<sp/>=<sp/>SPIFFS_CB_DELETED;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback:<sp/>WARNING<sp/>unknown<sp/>callback<sp/>event<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>ev);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>bail<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>fs-&gt;file_cb_f(fs,<sp/>op,<sp/>obj_id,<sp/>new_pix);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>object<sp/>by<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal">s32_t<sp/>spiffs_object_open_by_id(</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_flags<sp/>flags,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_mode<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>pix;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_id_and_span(fs,<sp/>obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG,<sp/>0,<sp/>0,<sp/>&amp;pix);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_object_open_by_page(fs,<sp/>pix,<sp/>fd,<sp/>flags,<sp/>mode);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>object<sp/>by<sp/>page<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal">s32_t<sp/>spiffs_object_open_by_page(</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_flags<sp/>flags,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_mode<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>(void)mode;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>oix_hdr;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>obj_id;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>),<sp/>(u8_t<sp/>*)&amp;oix_hdr);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix<sp/>=<sp/>SPIFFS_BLOCK_FOR_PAGE(fs,<sp/>pix);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE(fs,<sp/>pix);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>SPIFFS_BLOCK_TO_PADDR(fs,<sp/>bix)<sp/>+<sp/>entry<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spiffs_obj_id),<sp/>(u8_t<sp/>*)&amp;obj_id);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>fd-&gt;fs<sp/>=<sp/>fs;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>fd-&gt;objix_hdr_pix<sp/>=<sp/>pix;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>fd-&gt;size<sp/>=<sp/>oix_hdr.size;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>fd-&gt;offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>pix;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>fd-&gt;obj_id<sp/>=<sp/>obj_id;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>fd-&gt;flags<sp/>=<sp/>flags;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>SPIFFS_VALIDATE_OBJIX(oix_hdr.p_hdr,<sp/>fd-&gt;obj_id,<sp/>0);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;open:<sp/>fd<sp/>&quot;</highlight><highlight class="normal">_SPIPRIfd</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>obj<sp/>id<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>SPIFFS_FH_OFFS(fs,<sp/>fd-&gt;file_nbr),<sp/>fd-&gt;obj_id);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Append<sp/>to<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keep<sp/>current<sp/>object<sp/>index<sp/>(header)<sp/>page<sp/>in<sp/>fs-&gt;work<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal">s32_t<sp/>spiffs_object_append(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,<sp/>u32_t<sp/>offset,<sp/>u8_t<sp/>*data,<sp/>u32_t<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs<sp/>=<sp/>fd-&gt;fs;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>u32_t<sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>@<sp/>offs<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>size<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>offset,<sp/>fd-&gt;size);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;<sp/>fd-&gt;size)<sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>offset<sp/>reversed<sp/>to<sp/>size\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>fd-&gt;size;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_gc_check(fs,<sp/>len<sp/>+<sp/>SPIFFS_DATA_PAGE_SIZE(fs));<sp/></highlight><highlight class="comment">//<sp/>add<sp/>an<sp/>extra<sp/>page<sp/>of<sp/>data<sp/>worth<sp/>for<sp/>meta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>gc<sp/>check<sp/>fail<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>res);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*objix_hdr<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>p_hdr;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>cur_objix_spix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>prev_objix_spix<sp/>=<sp/>(spiffs_span_ix)-1;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>cur_objix_pix<sp/>=<sp/>fd-&gt;objix_hdr_pix;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>new_objix_hdr_page;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>data_spix<sp/>=<sp/>offset<sp/>/<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>data_page;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>u32_t<sp/>page_offs<sp/>=<sp/>offset<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK<sp/>&amp;&amp;<sp/>written<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>object<sp/>index<sp/>page<sp/>span<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_objix_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>storing<sp/>and<sp/>loading<sp/>of<sp/>object<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>!=<sp/>prev_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>this<sp/>clause<sp/>we<sp/>return<sp/>directly<sp/>if<sp/>something<sp/>fails,<sp/>object<sp/>index<sp/>mess-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(written<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>previous<sp/>object<sp/>index<sp/>page,<sp/>unless<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>objix<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_objix_pix,<sp/>prev_objix_spix,<sp/>written);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>an<sp/>update<sp/>to<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix_hdr-&gt;size<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>an<sp/>empty<sp/>object,<sp/>update<sp/>same<sp/>page<sp/>(size<sp/>was<sp/>0xffffffff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>cur_objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>cur_objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>a<sp/>nonempty<sp/>object,<sp/>update<sp/>to<sp/>new<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>fs-&gt;work,<sp/>0,<sp/>0,<sp/>offset+written,<sp/>&amp;new_objix_hdr_page);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>new<sp/>objix_hdr,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_objix_hdr_page,<sp/>0,<sp/>written);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>an<sp/>update<sp/>to<sp/>an<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>cur_objix_pix,<sp/>prev_objix_spix);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>cur_objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work,</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_UPD,fd-&gt;obj_id,<sp/>objix-&gt;p_hdr.span_ix,<sp/>cur_objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>length<sp/>in<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>0,<sp/>0,<sp/>0,<sp/>offset+written,<sp/>&amp;new_objix_hdr_page);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>new<sp/>size<sp/>I<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>objix_hdr,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset+written,<sp/>new_objix_hdr_page,<sp/>0,<sp/>written);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;size<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>or<sp/>load<sp/>new<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>object<sp/>index<sp/>header<sp/>page,<sp/>must<sp/>always<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>load<sp/>objixhdr<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,<sp/>cur_objix_pix,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>cur_objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix_hdr-&gt;p_hdr,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_span_ix<sp/>len_objix_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>(fd-&gt;size-1)/SPIFFS_DATA_PAGE_SIZE(fs));</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>subsequent<sp/>passes,<sp/>create<sp/>a<sp/>new<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(written<sp/>&gt;<sp/>0<sp/>||<sp/>cur_objix_spix<sp/>&gt;<sp/>len_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.obj_id<sp/>=<sp/>fd-&gt;obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.span_ix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.flags<sp/>=<sp/>0xff<sp/>&amp;<sp/>~(SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_INDEX);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_allocate_data(fs,<sp/>fd-&gt;obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG,</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p_hdr,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>&amp;cur_objix_pix);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quick<sp/>&quot;load&quot;<sp/>of<sp/>new<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(fs-&gt;work,<sp/>0xff,<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs));</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SPIFFS_MEMCPY(fs-&gt;work,<sp/>&amp;p_hdr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>));</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_NEW,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix,<sp/>cur_objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>create<sp/>objix<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>cur_objix_pix,<sp/>cur_objix_spix,<sp/>written);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>first<sp/>pass,<sp/>we<sp/>load<sp/>existing<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>find<sp/>objix<sp/>span_ix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;cursor_objix_spix<sp/>==<sp/>cur_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>fd-&gt;cursor_objix_pix;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_id_and_span(fs,<sp/>fd-&gt;obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG,<sp/>cur_objix_spix,<sp/>0,<sp/>&amp;pix);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>found<sp/>object<sp/>index<sp/>at<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>[fd<sp/>size<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;]\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,<sp/>pix,<sp/>fd-&gt;size);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix_hdr-&gt;p_hdr,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_objix_pix<sp/>=<sp/>pix;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>cur_objix_pix;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;size<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>to_write<sp/>=<sp/>MIN(len-written,<sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>-<sp/>page_offs);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page_offs<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>beginning<sp/>of<sp/>a<sp/>page,<sp/>allocate<sp/>and<sp/>write<sp/>a<sp/>new<sp/>page<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.obj_id<sp/>=<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.span_ix<sp/>=<sp/>data_spix;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.flags<sp/>=<sp/>0xff<sp/>&amp;<sp/>~(SPIFFS_PH_FLAG_FINAL);<sp/><sp/></highlight><highlight class="comment">//<sp/>finalize<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_allocate_data(fs,<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p_hdr,<sp/>&amp;data[written],<sp/>to_write,<sp/>page_offs,<sp/>1,<sp/>&amp;data_page);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>new<sp/>data<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>offset:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>len<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_page,<sp/>data_spix,<sp/>page_offs,<sp/>to_write,<sp/>written);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>to<sp/>existing<sp/>page,<sp/>fill<sp/>out<sp/>free<sp/>data<sp/>in<sp/>existing<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_page<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_page<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)];</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_data_check(fs,<sp/>fd,<sp/>data_page,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_page)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)<sp/>+<sp/>page_offs,<sp/>to_write,<sp/>&amp;data[written]);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>to<sp/>existing<sp/>data<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>offset:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>len<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>data_page,<sp/>data_spix,<sp/>page_offs,<sp/>to_write,<sp/>written);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>memory<sp/>representation<sp/>of<sp/>object<sp/>index<sp/>page<sp/>with<sp/>new<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix]<sp/>=<sp/>data_page;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>wrote<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>objix_hdr<sp/>entry<sp/>&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>mem\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>data_page,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objix_hdr-&gt;size<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)]<sp/>=<sp/>data_page;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>wrote<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>objix<sp/>entry<sp/>&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>mem\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>data_page,<sp/>(spiffs_span_ix)SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>internals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>page_offs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>data_spix++;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>written<sp/>+=<sp/>to_write;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>fd-&gt;size<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>fd-&gt;offset<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>cur_objix_pix;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finalize<sp/>updated<sp/>object<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>s32_t<sp/>res2<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrote<sp/>beyond<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>last<sp/>modified<sp/>object<sp/>index<sp/>page,<sp/>unless<sp/>object<sp/>header<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>objix<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_objix_pix,<sp/>cur_objix_spix,<sp/>written);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>cur_objix_pix,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>cur_objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_UPD,<sp/>fd-&gt;obj_id,<sp/>objix-&gt;p_hdr.span_ix,<sp/>cur_objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>size<sp/>in<sp/>object<sp/>header<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>0,<sp/>0,<sp/>0,<sp/>offset+written,<sp/>&amp;new_objix_hdr_page);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>new<sp/>size<sp/>II<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>objix_hdr,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>res<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>offset+written,<sp/>new_objix_hdr_page,<sp/>0,<sp/>written,<sp/>res2);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrote<sp/>within<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrote<sp/>to<sp/>empty<sp/>object<sp/>-<sp/>simply<sp/>update<sp/>size<sp/>and<sp/>write<sp/>whole<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>objix_hdr-&gt;size<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>fresh<sp/>objix_hdr<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>cur_objix_pix,<sp/>cur_objix_spix,<sp/>written);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>cur_objix_pix,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>cur_objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callback<sp/>on<sp/>object<sp/>index<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work,</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_UPD_HDR,<sp/>fd-&gt;obj_id,<sp/>objix_hdr-&gt;p_hdr.span_ix,<sp/>cur_objix_pix,<sp/>objix_hdr-&gt;size);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modifying<sp/>object<sp/>index<sp/>header<sp/>page,<sp/>update<sp/>size<sp/>and<sp/>make<sp/>new<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>fs-&gt;work,<sp/>0,<sp/>0,<sp/>offset+written,<sp/>&amp;new_objix_hdr_page);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;append:<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>store<sp/>modified<sp/>objix_hdr<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>new_objix_hdr_page,<sp/>0,<sp/>written);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>spiffs_object_append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modify<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keep<sp/>current<sp/>object<sp/>index<sp/>(header)<sp/>page<sp/>in<sp/>fs-&gt;work<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal">s32_t<sp/>spiffs_object_modify(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,<sp/>u32_t<sp/>offset,<sp/>u8_t<sp/>*data,<sp/>u32_t<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs<sp/>=<sp/>fd-&gt;fs;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>u32_t<sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_gc_check(fs,<sp/>len<sp/>+<sp/>SPIFFS_DATA_PAGE_SIZE(fs));</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*objix_hdr<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>p_hdr;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>cur_objix_spix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>prev_objix_spix<sp/>=<sp/>(spiffs_span_ix)-1;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>cur_objix_pix<sp/>=<sp/>fd-&gt;objix_hdr_pix;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>new_objix_hdr_pix;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>data_spix<sp/>=<sp/>offset<sp/>/<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>data_pix;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>u32_t<sp/>page_offs<sp/>=<sp/>offset<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK<sp/>&amp;&amp;<sp/>written<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>object<sp/>index<sp/>page<sp/>span<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_objix_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handle<sp/>storing<sp/>and<sp/>loading<sp/>of<sp/>object<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>!=<sp/>prev_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>this<sp/>clause<sp/>we<sp/>return<sp/>directly<sp/>if<sp/>something<sp/>fails,<sp/>object<sp/>index<sp/>mess-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(written<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>previous<sp/>object<sp/>index<sp/>(header)<sp/>page,<sp/>unless<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>previous<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>fs-&gt;work,<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;new_objix_hdr_pix);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>store<sp/>modified<sp/>objix_hdr<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>new_objix_hdr_pix,<sp/>0,<sp/>written);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>new<sp/>version<sp/>of<sp/>previous<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>new_objix_pix;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>cur_objix_pix,<sp/>prev_objix_spix);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_move(fs,<sp/>fd-&gt;file_nbr,<sp/>(u8_t*)objix,<sp/>fd-&gt;obj_id,<sp/>0,<sp/>cur_objix_pix,<sp/>&amp;new_objix_pix);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>store<sp/>previous<sp/>modified<sp/>objix<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>new_objix_pix,<sp/>objix-&gt;p_hdr.span_ix,<sp/>written);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)objix,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_UPD,<sp/>fd-&gt;obj_id,<sp/>objix-&gt;p_hdr.span_ix,<sp/>new_objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>next<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>object<sp/>index<sp/>header<sp/>page,<sp/>must<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>load<sp/>objixhdr<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>cur_objix_pix,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>cur_objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix_hdr-&gt;p_hdr,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>existing<sp/>object<sp/>index<sp/>page<sp/>on<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>find<sp/>objix<sp/>span_ix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;cursor_objix_spix<sp/>==<sp/>cur_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>=<sp/>fd-&gt;cursor_objix_pix;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_id_and_span(fs,<sp/>fd-&gt;obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG,<sp/>cur_objix_spix,<sp/>0,<sp/>&amp;pix);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>found<sp/>object<sp/>index<sp/>at<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>pix);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix_hdr-&gt;p_hdr,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_objix_pix<sp/>=<sp/>pix;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>cur_objix_pix;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>partial<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>to_write<sp/>=<sp/>MIN(len-written,<sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>-<sp/>page_offs);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>orig_data_pix;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>orig_data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix];</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>orig_data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)];</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>p_hdr.obj_id<sp/>=<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>p_hdr.span_ix<sp/>=<sp/>data_spix;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>p_hdr.flags<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page_offs<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>to_write<sp/>==<sp/>SPIFFS_DATA_PAGE_SIZE(fs))<sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>full<sp/>page,<sp/>allocate<sp/>and<sp/>write<sp/>a<sp/>new<sp/>page<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_allocate_data(fs,<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p_hdr,<sp/>&amp;data[written],<sp/>to_write,<sp/>page_offs,<sp/>1,<sp/>&amp;data_pix);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>store<sp/>new<sp/>data<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>offset:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>len<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>data_pix,<sp/>data_spix,<sp/>page_offs,<sp/>to_write,<sp/>written);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>to<sp/>existing<sp/>page,<sp/>allocate<sp/>new<sp/>and<sp/>copy<sp/>unmodified<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_data_check(fs,<sp/>fd,<sp/>orig_data_pix,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_allocate_data(fs,<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p_hdr,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;data_pix);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>unmodified<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page_offs<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_phys_cpy(fs,<sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>orig_data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page_offs);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page_offs<sp/>+<sp/>to_write<sp/>&lt;<sp/>SPIFFS_DATA_PAGE_SIZE(fs))<sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_phys_cpy(fs,<sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)<sp/>+<sp/>page_offs<sp/>+<sp/>to_write,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>orig_data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)<sp/>+<sp/>page_offs<sp/>+<sp/>to_write,</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>-<sp/>(page_offs<sp/>+<sp/>to_write));</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)<sp/>+<sp/>page_offs,<sp/>to_write,<sp/>&amp;data[written]);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.flags<sp/>&amp;=<sp/>~SPIFFS_PH_FLAG_FINAL;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_pix)<sp/>+<sp/>offsetof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>,<sp/>flags),</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8_t),</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;p_hdr.flags);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>store<sp/>to<sp/>existing<sp/>data<sp/>page,<sp/>src:&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;,<sp/>dst:&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>offset:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>len<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>orig_data_pix,<sp/>data_pix,<sp/>data_spix,<sp/>page_offs,<sp/>to_write,<sp/>written);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>original<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_delete(fs,<sp/>orig_data_pix);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>memory<sp/>representation<sp/>of<sp/>object<sp/>index<sp/>page<sp/>with<sp/>new<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix]<sp/>=<sp/>data_pix;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>wrote<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>objix_hdr<sp/>entry<sp/>&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>mem\n&quot;</highlight><highlight class="normal">,<sp/>data_pix,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)]<sp/>=<sp/>data_pix;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>wrote<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>objix<sp/>entry<sp/>&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>mem\n&quot;</highlight><highlight class="normal">,<sp/>data_pix,<sp/>(spiffs_span_ix)SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>internals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>page_offs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>data_spix++;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>written<sp/>+=<sp/>to_write;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>fd-&gt;offset<sp/>=<sp/>offset+written;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>cur_objix_pix;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>finalize<sp/>updated<sp/>object<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>s32_t<sp/>res2<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrote<sp/>beyond<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>last<sp/>modified<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>and<sp/>update<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>new_objix_pix;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>cur_objix_pix,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>spiffs_page_move(fs,<sp/>fd-&gt;file_nbr,<sp/>(u8_t*)objix,<sp/>fd-&gt;obj_id,<sp/>0,<sp/>cur_objix_pix,<sp/>&amp;new_objix_pix);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>store<sp/>modified<sp/>objix<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>new_objix_pix,<sp/>cur_objix_spix,<sp/>written);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>new_objix_pix;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)objix,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_UPD,<sp/>fd-&gt;obj_id,<sp/>objix-&gt;p_hdr.span_ix,<sp/>new_objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrote<sp/>within<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>res2<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>fs-&gt;work,<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;new_objix_hdr_pix);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;modify:<sp/>store<sp/>modified<sp/>objix_hdr<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>written<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>new_objix_hdr_pix,<sp/>0,<sp/>written);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res2);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>spiffs_object_modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_object_find_object_index_header_by_name_v(</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>obj_id,</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_block_ix<sp/>bix,</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix_entry,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p)<sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>(void)user_var_p;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>objix_hdr;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>ix_entry);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj_id<sp/>==<sp/>SPIFFS_OBJ_ID_FREE<sp/>||<sp/>obj_id<sp/>==<sp/>SPIFFS_OBJ_ID_DELETED<sp/>||</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(obj_id<sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_COUNTINUE;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>),<sp/>(u8_t<sp/>*)&amp;objix_hdr);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objix_hdr.p_hdr.span_ix<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(objix_hdr.p_hdr.flags<sp/>&amp;<sp/>(SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_IXDELE))<sp/>==</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_IXDELE))<sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)user_const_p,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)objix_hdr.name)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_COUNTINUE;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>object<sp/>index<sp/>header<sp/>page<sp/>by<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal">s32_t<sp/>spiffs_object_find_object_index_header_by_name(</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>name[SPIFFS_OBJ_NAME_LEN],</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>*pix)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>spiffs_block_ix<sp/>bix;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(fs,</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_block_ix,</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_obj_lu_entry,</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_object_find_object_index_header_by_name_v,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name,</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bix,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;entry);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_ERR_NOT_FOUND;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pix)<sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>*pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>entry);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>fs-&gt;cursor_block_ix<sp/>=<sp/>bix;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>fs-&gt;cursor_obj_lu_entry<sp/>=<sp/>entry;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Truncates<sp/>object<sp/>to<sp/>new<sp/>size.<sp/>If<sp/>new<sp/>size<sp/>is<sp/>null,<sp/>object<sp/>may<sp/>be<sp/>removed<sp/>totally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal">s32_t<sp/>spiffs_object_truncate(</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>new_size,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>remove_full)<sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs<sp/>=<sp/>fd-&gt;fs;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd-&gt;size<sp/>==<sp/>SPIFFS_UNDEFINED_LEN<sp/>||<sp/>fd-&gt;size<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!remove_full)<sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>2<sp/>pages<sp/>if<sp/>not<sp/>removing:<sp/>object<sp/>index<sp/>page<sp/>+<sp/>possibly<sp/>chopped<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove_full<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_gc_check(fs,<sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>objix_pix<sp/>=<sp/>fd-&gt;objix_hdr_pix;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>data_spix<sp/>=<sp/>(fd-&gt;size<sp/>&gt;<sp/>0<sp/>?<sp/>fd-&gt;size-1<sp/>:<sp/>0)<sp/>/<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>u32_t<sp/>cur_size<sp/>=<sp/>fd-&gt;size<sp/>==<sp/>(u32_t)SPIFFS_UNDEFINED_LEN<sp/>?<sp/>0<sp/>:<sp/>fd-&gt;size<sp/>;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>cur_objix_spix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>prev_objix_spix<sp/>=<sp/>(spiffs_span_ix)-1;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*objix_hdr<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>data_pix;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>new_objix_hdr_pix;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>truncating,<sp/>check<sp/>if<sp/>object<sp/>is<sp/>to<sp/>be<sp/>fully<sp/>removed<sp/>and<sp/>mark<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove_full<sp/>&amp;&amp;<sp/>new_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>flags<sp/>=<sp/>~(<sp/>SPIFFS_PH_FLAG_USED<sp/>|<sp/>SPIFFS_PH_FLAG_INDEX<sp/>|<sp/>SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_IXDELE);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>fd-&gt;objix_hdr_pix)<sp/>+<sp/>offsetof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>,<sp/>flags),</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8_t),</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;flags);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>from<sp/>end<sp/>of<sp/>object<sp/>until<sp/>desired<sp/>len<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cur_size<sp/>&gt;<sp/>new_size)<sp/>{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_objix_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>put<sp/>object<sp/>index<sp/>for<sp/>current<sp/>data<sp/>span<sp/>index<sp/>in<sp/>work<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_objix_spix<sp/>!=<sp/>cur_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_objix_spix<sp/>!=<sp/>(spiffs_span_ix)-1)<sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>previous<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>delete<sp/>objix<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>objix_pix,<sp/>prev_objix_spix);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>objix_pix,<sp/>prev_objix_spix);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_delete(fs,<sp/>objix_pix);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)0,</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_DEL,<sp/>fd-&gt;obj_id,<sp/>objix-&gt;p_hdr.span_ix,<sp/>objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_objix_spix<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>object<sp/>index<sp/>header<sp/>page,<sp/>unless<sp/>we<sp/>totally<sp/>want<sp/>to<sp/>remove<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>fully<sp/>removing,<sp/>we&apos;re<sp/>not<sp/>keeping<sp/>consistency<sp/>as<sp/>good<sp/>as<sp/>when<sp/>storing<sp/>the<sp/>header<sp/>between<sp/>chunks,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>we<sp/>be<sp/>aborted.<sp/>But<sp/>when<sp/>removing<sp/>full<sp/>files,<sp/>a<sp/>crammed<sp/>system<sp/>may<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>ERR_FULL<sp/>a<sp/>la<sp/>windows.<sp/>We<sp/>cannot<sp/>have<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hence,<sp/>take<sp/>the<sp/>risk<sp/>-<sp/>if<sp/>aborted,<sp/>a<sp/>file<sp/>check<sp/>would<sp/>free<sp/>the<sp/>lost<sp/>pages<sp/>and<sp/>mend<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>file<sp/>is<sp/>marked<sp/>as<sp/>fully<sp/>deleted<sp/>in<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove_full<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>update<sp/>objix<sp/>hdr<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>size<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;objix_hdr_pix,<sp/>prev_objix_spix,<sp/>cur_size);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>0,<sp/>0,<sp/>0,<sp/>cur_size,<sp/>&amp;new_objix_hdr_pix);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;size<sp/>=<sp/>cur_size;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>current<sp/>object<sp/>index<sp/>(header)<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix_pix<sp/>=<sp/>fd-&gt;objix_hdr_pix;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_id_and_span(fs,<sp/>fd-&gt;obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG,<sp/>cur_objix_spix,<sp/>0,<sp/>&amp;objix_pix);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>load<sp/>objix<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>data<sp/>spix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>objix_pix,<sp/>cur_objix_spix,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix_hdr-&gt;p_hdr,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>objix_pix;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>cur_size;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix];</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix]<sp/>=<sp/>SPIFFS_OBJ_ID_FREE;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)];</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)]<sp/>=<sp/>SPIFFS_OBJ_ID_FREE;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>got<sp/>data<sp/>pix<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>data_pix);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_size<sp/>==<sp/>0<sp/>||<sp/>remove_full<sp/>||<sp/>cur_size<sp/>-<sp/>new_size<sp/>&gt;=<sp/>SPIFFS_DATA_PAGE_SIZE(fs))<sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>full<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_data_check(fs,<sp/>fd,<sp/>data_pix,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_ERR_DELETED<sp/>&amp;&amp;<sp/>res<sp/>!=<sp/>SPIFFS_OK<sp/>&amp;&amp;<sp/>res<sp/>!=<sp/>SPIFFS_ERR_INDEX_REF_FREE)<sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>err<sp/>validating<sp/>data<sp/>pix<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>res);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK)<sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_delete(fs,<sp/>data_pix);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>err<sp/>deleting<sp/>data<sp/>pix<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>res);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_ERR_DELETED<sp/>||<sp/>res<sp/>==<sp/>SPIFFS_ERR_INDEX_REF_FREE)<sp/>{</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_size<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_size<sp/>-=<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_size<sp/>-=<sp/>cur_size<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;size<sp/>=<sp/>cur_size;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>cur_size;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>delete<sp/>data<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>data<sp/>spix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>cur_size:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>data_pix,<sp/>data_spix,<sp/>cur_size);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>last<sp/>page,<sp/>partially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref><sp/>p_hdr;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>new_data_pix;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>bytes_to_remove<sp/>=<sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>-<sp/>(new_size<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs));</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>delete<sp/>&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>from<sp/>data<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>data<sp/>spix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;,<sp/>cur_size:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>bytes_to_remove,<sp/>data_pix,<sp/>data_spix,<sp/>cur_size);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_data_check(fs,<sp/>fd,<sp/>data_pix,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.obj_id<sp/>=<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.span_ix<sp/>=<sp/>data_spix;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.flags<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>new<sp/>page<sp/>and<sp/>copy<sp/>unmodified<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_allocate_data(fs,<sp/>fd-&gt;obj_id<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG,</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;p_hdr,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>&amp;new_data_pix);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_phys_cpy(fs,<sp/>0,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>new_data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>),</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>-<sp/>bytes_to_remove);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>original<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_delete(fs,<sp/>data_pix);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_hdr.flags<sp/>&amp;=<sp/>~SPIFFS_PH_FLAG_FINAL;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_wr(fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_UPDT,</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>new_data_pix)<sp/>+<sp/>offsetof(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>,<sp/>flags),</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8_t),</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u8_t<sp/>*)&amp;p_hdr.flags);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>SPIFFS_OK)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>memory<sp/>representation<sp/>of<sp/>object<sp/>index<sp/>page<sp/>with<sp/>new<sp/>data<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix]<sp/>=<sp/>new_data_pix;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>wrote<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>objix_hdr<sp/>entry<sp/>&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>mem\n&quot;</highlight><highlight class="normal">,<sp/>new_data_pix,<sp/>(spiffs_span_ix)SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix));</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)]<sp/>=<sp/>new_data_pix;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>wrote<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>objix<sp/>entry<sp/>&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>mem\n&quot;</highlight><highlight class="normal">,<sp/>new_data_pix,<sp/>(spiffs_span_ix)SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix));</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_size<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;size<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>cur_size;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>data_spix--;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove_full)<sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>object<sp/>altogether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>remove<sp/>object<sp/>index<sp/>header<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>objix_pix);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_delete(fs,<sp/>objix_pix);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)0,</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_DEL,<sp/>fd-&gt;obj_id,<sp/>0,<sp/>objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>uninitialized<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>reset<sp/>objix_hdr<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>objix_pix);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(fs-&gt;work<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>),<sp/>0xff,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>));</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix_pix,<sp/>fs-&gt;work,<sp/>0,<sp/>0,<sp/>SPIFFS_UNDEFINED_LEN,<sp/>&amp;new_objix_hdr_pix);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>update<sp/>object<sp/>index<sp/>header<sp/>page<sp/>with<sp/>indices<sp/>and<sp/>size\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix_pix,<sp/>fs-&gt;work,<sp/>0,<sp/>0,<sp/>cur_size,<sp/>&amp;new_objix_hdr_pix);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>both<sp/>current<sp/>object<sp/>index<sp/>page<sp/>and<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>new_objix_pix;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_index_check(fs,<sp/>fd,<sp/>objix_pix,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>and<sp/>update<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_move(fs,<sp/>fd-&gt;file_nbr,<sp/>(u8_t*)objix_hdr,<sp/>fd-&gt;obj_id,<sp/>0,<sp/>objix_pix,<sp/>&amp;new_objix_pix);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_cb_object_event(fs,<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)objix_hdr,</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_EV_IX_UPD,<sp/>fd-&gt;obj_id,<sp/>objix-&gt;p_hdr.span_ix,<sp/>new_objix_pix,<sp/>0);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;truncate:<sp/>store<sp/>modified<sp/>objix<sp/>page,<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>new_objix_pix,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>new_objix_pix;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>cur_size;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>object<sp/>index<sp/>header<sp/>page<sp/>with<sp/>new<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_object_update_index_hdr(fs,<sp/>fd,<sp/>fd-&gt;obj_id,</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;objix_hdr_pix,<sp/>0,<sp/>0,<sp/>0,<sp/>cur_size,<sp/>&amp;new_objix_hdr_pix);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/>fd-&gt;size<sp/>=<sp/>cur_size;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>spiffs_object_truncate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal">s32_t<sp/>spiffs_object_read(</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd,</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>offset,</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len,</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>u8_t<sp/>*dst)<sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs<sp/>=<sp/>fd-&gt;fs;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>objix_pix;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>spiffs_page_ix<sp/>data_pix;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>data_spix<sp/>=<sp/>offset<sp/>/<sp/>SPIFFS_DATA_PAGE_SIZE(fs);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/>u32_t<sp/>cur_offset<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>spiffs_span_ix<sp/>prev_objix_spix<sp/>=<sp/>(spiffs_span_ix)-1;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*objix_hdr<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*objix<sp/>=<sp/>(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref><sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cur_offset<sp/>&lt;<sp/>offset<sp/>+<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>have<sp/>a<sp/>memory,<sp/>index<sp/>map<sp/>and<sp/>if<sp/>so,<sp/>if<sp/>we&apos;re<sp/>within<sp/>index<sp/>map&apos;s<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>if<sp/>so,<sp/>if<sp/>the<sp/>entry<sp/>is<sp/>populated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;ix_map<sp/>&amp;&amp;<sp/>data_spix<sp/>&gt;=<sp/>fd-&gt;ix_map-&gt;start_spix<sp/>&amp;&amp;<sp/>data_spix<sp/>&lt;=<sp/>fd-&gt;ix_map-&gt;end_spix</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>fd-&gt;ix_map-&gt;map_buf[data_spix<sp/>-<sp/>fd-&gt;ix_map-&gt;start_spix])<sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_pix<sp/>=<sp/>fd-&gt;ix_map-&gt;map_buf[data_spix<sp/>-<sp/>fd-&gt;ix_map-&gt;start_spix];</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_objix_spix<sp/>=<sp/>SPIFFS_OBJ_IX_ENTRY_SPAN_IX(fs,<sp/>data_spix);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_objix_spix<sp/>!=<sp/>cur_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>current<sp/>object<sp/>index<sp/>(header)<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix_pix<sp/>=<sp/>fd-&gt;objix_hdr_pix;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;read:<sp/>find<sp/>objix<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;cursor_objix_spix<sp/>==<sp/>cur_objix_spix)<sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objix_pix<sp/>=<sp/>fd-&gt;cursor_objix_pix;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_id_and_span(fs,<sp/>fd-&gt;obj_id<sp/>|<sp/>SPIFFS_OBJ_ID_IX_FLAG,<sp/>cur_objix_spix,<sp/>0,<sp/>&amp;objix_pix);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;read:<sp/>load<sp/>objix<sp/>page<sp/>&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>data<sp/>spix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>objix_pix,<sp/>cur_objix_spix,<sp/>data_spix);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_IX<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>objix_pix),<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs),<sp/>fs-&gt;work);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_VALIDATE_OBJIX(objix-&gt;p_hdr,<sp/>fd-&gt;obj_id,<sp/>cur_objix_spix);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>cur_offset;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_pix<sp/>=<sp/>objix_pix;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;cursor_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_objix_spix<sp/>=<sp/>cur_objix_spix;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_objix_spix<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>header<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix_hdr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>)))[data_spix];</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>data<sp/>page<sp/>from<sp/>object<sp/>index<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_pix<sp/>=<sp/>((spiffs_page_ix*)((u8_t<sp/>*)objix<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix</ref>)))[SPIFFS_OBJ_IX_ENTRY(fs,<sp/>data_spix)];</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>remaining<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>len_to_read<sp/>=<sp/>offset<sp/>+<sp/>len<sp/>-<sp/>cur_offset;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>data<sp/>in<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>len_to_read<sp/>=<sp/>MIN(len_to_read,<sp/>SPIFFS_DATA_PAGE_SIZE(fs)<sp/>-<sp/>(cur_offset<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs)));</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>data<sp/>in<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>len_to_read<sp/>=<sp/>MIN(len_to_read,<sp/>fd-&gt;size);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;read:<sp/>offset:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>rd:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>data<sp/>spix:&quot;</highlight><highlight class="normal">_SPIPRIsp</highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>data_pix:&quot;</highlight><highlight class="normal">_SPIPRIpg</highlight><highlight class="stringliteral">&quot;<sp/>addr:&quot;</highlight><highlight class="normal">_SPIPRIad</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>cur_offset,<sp/>len_to_read,<sp/>data_spix,<sp/>data_pix,</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u32_t)(SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)<sp/>+<sp/>(cur_offset<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs))));</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len_to_read<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>SPIFFS_ERR_END_OF_OBJECT;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_page_data_check(fs,<sp/>fd,<sp/>data_pix,<sp/>data_spix);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs,<sp/>SPIFFS_OP_T_OBJ_DA<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;file_nbr,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>data_pix)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_header</ref>)<sp/>+<sp/>(cur_offset<sp/>%<sp/>SPIFFS_DATA_PAGE_SIZE(fs)),</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len_to_read,</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>len_to_read;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_offset<sp/>+=<sp/>len_to_read;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>fd-&gt;offset<sp/>=<sp/>cur_offset;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>data_spix++;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059" refid="structspiffs__free__obj__id__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>min_obj_id;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>max_obj_id;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/>u32_t<sp/>compaction;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*conflicting_name;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal">}<sp/><ref refid="structspiffs__free__obj__id__state" kindref="compound">spiffs_free_obj_id_state</ref>;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_obj_lu_find_free_obj_id_bitmap_v(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/>spiffs_obj_id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>spiffs_block_ix<sp/>bix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix_entry,</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p)<sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>SPIFFS_OBJ_ID_FREE<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>SPIFFS_OBJ_ID_DELETED)<sp/>{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>spiffs_obj_id<sp/>min_obj_id<sp/>=<sp/>*((spiffs_obj_id*)user_var_p);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*conflicting_name<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t*)user_const_p;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>conflicting<sp/>name<sp/>parameter<sp/>is<sp/>given,<sp/>also<sp/>check<sp/>if<sp/>this<sp/>name<sp/>is<sp/>found<sp/>in<sp/>object<sp/>index<sp/>hdrs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(conflicting_name<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG))<sp/>{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiffs_page_ix<sp/>pix<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PIX(fs,<sp/>bix,<sp/>ix_entry);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>objix_hdr;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_PAGE_TO_PADDR(fs,<sp/>pix),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>),<sp/>(u8_t<sp/>*)&amp;objix_hdr);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(objix_hdr.p_hdr.span_ix<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(objix_hdr.p_hdr.flags<sp/>&amp;<sp/>(SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_IXDELE))<sp/>==</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_PH_FLAG_DELET<sp/>|<sp/>SPIFFS_PH_FLAG_IXDELE))<sp/>{</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)user_const_p,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)objix_hdr.name)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_CONFLICTING_NAME;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;=<sp/>~SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>u32_t<sp/>bit_ix<sp/>=<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">-min_obj_id)<sp/>&amp;<sp/>7;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>byte_ix<sp/>=<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">-min_obj_id)<sp/>&gt;&gt;<sp/>3;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte_ix<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(u32_t)byte_ix<sp/>&lt;<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs))<sp/>{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;work[byte_ix]<sp/>|=<sp/>(1&lt;&lt;bit_ix);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_COUNTINUE;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>s32_t<sp/>spiffs_obj_lu_find_free_obj_id_compact_v(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/>spiffs_obj_id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>spiffs_block_ix<sp/>bix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix_entry,</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_const_p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_var_p)<sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/>(void)user_var_p;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>SPIFFS_OBJ_ID_FREE<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>SPIFFS_OBJ_ID_DELETED<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG))<sp/>{</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>s32_t<sp/>res;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspiffs__free__obj__id__state" kindref="compound">spiffs_free_obj_id_state</ref><sp/>*state<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structspiffs__free__obj__id__state" kindref="compound">spiffs_free_obj_id_state</ref>*)user_const_p;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref><sp/>objix_hdr;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>_spiffs_rd(fs,<sp/>SPIFFS_OP_T_OBJ_LU2<sp/>|<sp/>SPIFFS_OP_C_READ,</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_TO_PADDR(fs,<sp/>bix,<sp/>ix_entry),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_p_i_f_f_s___p_a_c_k_e_d" kindref="compound">spiffs_page_object_ix_header</ref>),<sp/>(u8_t*)&amp;objix_hdr);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK<sp/>&amp;&amp;<sp/>objix_hdr.p_hdr.span_ix<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((objix_hdr.p_hdr.flags<sp/>&amp;<sp/>(SPIFFS_PH_FLAG_INDEX<sp/>|<sp/>SPIFFS_PH_FLAG_FINAL<sp/>|<sp/>SPIFFS_PH_FLAG_DELET))<sp/>==</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPIFFS_PH_FLAG_DELET)))<sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ok<sp/>object<sp/>look<sp/>up<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state-&gt;conflicting_name<sp/>&amp;&amp;<sp/>strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)state-&gt;conflicting_name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)objix_hdr.name)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_CONFLICTING_NAME;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;=<sp/>~SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>state-&gt;min_obj_id<sp/>&amp;&amp;<sp/>id<sp/>&lt;=<sp/>state-&gt;max_obj_id)<sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*map<sp/>=<sp/>(u8_t<sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>-<sp/>state-&gt;min_obj_id)<sp/>/<sp/>state-&gt;compaction;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SPIFFS_DBG(&quot;free_obj_id:<sp/>add<sp/>ix<sp/>&quot;_SPIPRIi&quot;<sp/>for<sp/>id<sp/>&quot;_SPIPRIid&quot;<sp/>min&quot;_SPIPRIid&quot;<sp/>max&quot;_SPIPRIid&quot;<sp/>comp:&quot;_SPIPRIi&quot;\n&quot;,<sp/>ix,<sp/>id,<sp/>state-&gt;min_obj_id,<sp/>state-&gt;max_obj_id,<sp/>state-&gt;compaction);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[ix]++;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_VIS_COUNTINUE;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scans<sp/>thru<sp/>all<sp/>object<sp/>lookup<sp/>for<sp/>object<sp/>index<sp/>header<sp/>pages.<sp/>If<sp/>total<sp/>possible<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object<sp/>ids<sp/>cannot<sp/>fit<sp/>into<sp/>a<sp/>work<sp/>buffer,<sp/>these<sp/>are<sp/>grouped.<sp/>When<sp/>a<sp/>group<sp/>containing<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object<sp/>ids<sp/>is<sp/>found,<sp/>the<sp/>object<sp/>lu<sp/>is<sp/>again<sp/>scanned<sp/>for<sp/>object<sp/>ids<sp/>within<sp/>group<sp/>and<sp/>bitmasked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finally,<sp/>the<sp/>bitmask<sp/>is<sp/>searched<sp/>for<sp/>a<sp/>free<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal">s32_t<sp/>spiffs_obj_lu_find_free_obj_id(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/>spiffs_obj_id<sp/>*obj_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*conflicting_name)<sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/>s32_t<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/>u32_t<sp/>max_objects<sp/>=<sp/>(fs-&gt;block_count<sp/>*<sp/>SPIFFS_OBJ_LOOKUP_MAX_ENTRIES(fs))<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__free__obj__id__state" kindref="compound">spiffs_free_obj_id_state</ref><sp/>state;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/>spiffs_obj_id<sp/>free_obj_id<sp/>=<sp/>SPIFFS_OBJ_ID_FREE;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/>state.min_obj_id<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/>state.max_obj_id<sp/>=<sp/>max_objects<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.max_obj_id<sp/>&amp;<sp/>SPIFFS_OBJ_ID_IX_FLAG)<sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>state.max_obj_id<sp/>=<sp/>((spiffs_obj_id)-1)<sp/>&amp;<sp/>~SPIFFS_OBJ_ID_IX_FLAG;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>state.compaction<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>state.conflicting_name<sp/>=<sp/>conflicting_name;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_OK<sp/>&amp;&amp;<sp/>free_obj_id<sp/>==<sp/>SPIFFS_OBJ_ID_FREE)<sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.max_obj_id<sp/>-<sp/>state.min_obj_id<sp/>&lt;=<sp/>(spiffs_obj_id)SPIFFS_CFG_LOG_PAGE_SZ(fs)*8)<sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>possible<sp/>to<sp/>represent<sp/>in<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;free_obj_id:<sp/>BITM<sp/>min:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>max:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>state.min_obj_id,<sp/>state.max_obj_id);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(fs-&gt;work,<sp/>0,<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs));</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(fs,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>spiffs_obj_lu_find_free_obj_id_bitmap_v,</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conflicting_name,<sp/>&amp;state.min_obj_id,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>traverse<sp/>bitmask<sp/>until<sp/>found<sp/>free<sp/>obj_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>mask<sp/>=<sp/>fs-&gt;work[i];</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mask<sp/>==<sp/>0xff)<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mask<sp/>&amp;<sp/>(1&lt;&lt;j))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*obj_id<sp/>=<sp/>(i&lt;&lt;3)+j+state.min_obj_id;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_FULL;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>possible<sp/>to<sp/>represent<sp/>all<sp/>ids<sp/>in<sp/>range<sp/>in<sp/>a<sp/>bitmap,<sp/>compact<sp/>and<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.compaction<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>element<sp/>in<sp/>compacted<sp/>table,<sp/>decrease<sp/>range<sp/>and<sp/>recompact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u32_t<sp/>i,<sp/>min_i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>*map<sp/>=<sp/>(u8_t<sp/>*)fs-&gt;work;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8_t<sp/>min_count<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8_t);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map[i]<sp/>&lt;<sp/>min_count)<sp/>{</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_count<sp/>=<sp/>map[i];</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_i<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_count<sp/>==<sp/>state.compaction)<sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>are<sp/>no<sp/>free<sp/>objids!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;free_obj_id:<sp/>compacted<sp/>table<sp/>is<sp/>full\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_FULL;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;free_obj_id:<sp/>COMP<sp/>select<sp/>index:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>min_count:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>min:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>max:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>compact:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>min_i,<sp/>min_count,<sp/>state.min_obj_id,<sp/>state.max_obj_id,<sp/>state.compaction);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>id<sp/>in<sp/>this<sp/>range,<sp/>skip<sp/>compacting<sp/>and<sp/>use<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*obj_id<sp/>=<sp/>min_i<sp/>*<sp/>state.compaction<sp/>+<sp/>state.min_obj_id;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;free_obj_id:<sp/>COMP<sp/>SEL<sp/>chunk:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;<sp/>min:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>state.compaction,<sp/>state.min_obj_id,<sp/>state.min_obj_id<sp/>+<sp/>min_i<sp/>*<sp/><sp/>state.compaction);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.min_obj_id<sp/>+=<sp/>min_i<sp/>*<sp/><sp/>state.compaction;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.max_obj_id<sp/>=<sp/>state.min_obj_id<sp/>+<sp/>state.compaction;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decrease<sp/>compaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state.max_obj_id<sp/>-<sp/>state.min_obj_id<sp/>&lt;=<sp/>(spiffs_obj_id)SPIFFS_CFG_LOG_PAGE_SZ(fs)*8))<sp/>{</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>for<sp/>compacting,<sp/>use<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>work<sp/>memory<sp/>of<sp/>log_page_size<sp/>bytes,<sp/>we<sp/>may<sp/>fit<sp/>in<sp/>log_page_size<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>what<sp/>if<sp/>compaction<sp/>is<sp/>&gt;<sp/>255<sp/>-<sp/>then<sp/>we<sp/>cannot<sp/>fit<sp/>it<sp/>in<sp/>a<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.compaction<sp/>=<sp/>(state.max_obj_id-state.min_obj_id)<sp/>/<sp/>((SPIFFS_CFG_LOG_PAGE_SZ(fs)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(u8_t)));</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_DBG(</highlight><highlight class="stringliteral">&quot;free_obj_id:<sp/>COMP<sp/>min:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>max:&quot;</highlight><highlight class="normal">_SPIPRIid</highlight><highlight class="stringliteral">&quot;<sp/>compact:&quot;</highlight><highlight class="normal">_SPIPRIi</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>state.min_obj_id,<sp/>state.max_obj_id,<sp/>state.compaction);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(fs-&gt;work,<sp/>0,<sp/>SPIFFS_CFG_LOG_PAGE_SZ(fs));</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>spiffs_obj_lu_find_entry_visitor(fs,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>spiffs_obj_lu_find_free_obj_id_compact_v,<sp/>&amp;state,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>SPIFFS_VIS_END)<sp/>res<sp/>=<sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPIFFS_CHECK_RES(res);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.conflicting_name<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>searched<sp/>for<sp/>conflicting<sp/>name<sp/>once,<sp/>no<sp/>need<sp/>to<sp/>do<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!SPIFFS_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_TEMPORAL_FD_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>djb2<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>u32_t<sp/>spiffs_hash(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>(void)fs;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/>u32_t<sp/>hash<sp/>=<sp/>5381;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/>u8_t<sp/>c;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>name[i++])<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>SPIFFS_OBJ_NAME_LEN)<sp/>{</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>hash<sp/>=<sp/>(hash<sp/>*<sp/>33)<sp/>^<sp/>c;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal">s32_t<sp/>spiffs_fd_find_new(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>**fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_TEMPORAL_FD_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/>u32_t<sp/>i;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/>u16_t<sp/>min_score<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>u32_t<sp/>cand_ix<sp/>=<sp/>(u32_t)-1;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/>u32_t<sp/>name_hash<sp/>=<sp/>name<sp/>?<sp/>spiffs_hash(fs,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*)name)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fds<sp/>=<sp/>(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*)fs-&gt;fd_space;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>if<sp/>(name)<sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>decrease<sp/>score<sp/>of<sp/>all<sp/>closed<sp/>descriptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fs-&gt;fd_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*cur_fd<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;file_nbr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;score<sp/>&gt;<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>score<sp/>==<sp/>0<sp/>indicates<sp/>never<sp/>used<sp/>fd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;score--;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>free<sp/>fd<sp/>with<sp/>least<sp/>score<sp/>or<sp/>name<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fs-&gt;fd_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*cur_fd<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;file_nbr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>&amp;&amp;<sp/>cur_fd-&gt;name_hash<sp/>==<sp/>name_hash)<sp/>{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cand_ix<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;score<sp/>&lt;<sp/>min_score)<sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_score<sp/>=<sp/>cur_fd-&gt;score;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cand_ix<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cand_ix<sp/>!=<sp/>(u32_t)-1)<sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*cur_fd<sp/>=<sp/>&amp;fds[cand_ix];</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name)<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;name_hash<sp/>==<sp/>name_hash<sp/>&amp;&amp;<sp/>cur_fd-&gt;score<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opened<sp/>an<sp/>fd<sp/>with<sp/>same<sp/>name<sp/>hash,<sp/>assume<sp/>same<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>search<sp/>point<sp/>to<sp/>saved<sp/>obj<sp/>index<sp/>page<sp/>and<sp/>hope<sp/>we<sp/>have<sp/>a<sp/>correct<sp/>match<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>start<sp/>searching<sp/>-<sp/>if<sp/>not,<sp/>we<sp/>will<sp/>just<sp/>keep<sp/>searching<sp/>until<sp/>it<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_block_ix<sp/>=<sp/>SPIFFS_BLOCK_FOR_PAGE(fs,<sp/>cur_fd-&gt;objix_hdr_pix);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs-&gt;cursor_obj_lu_entry<sp/>=<sp/>SPIFFS_OBJ_LOOKUP_ENTRY_FOR_PAGE(fs,<sp/>cur_fd-&gt;objix_hdr_pix);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;score<sp/>&lt;<sp/>0xffff-SPIFFS_TEMPORAL_CACHE_HIT_SCORE)<sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;score<sp/>+=<sp/>SPIFFS_TEMPORAL_CACHE_HIT_SCORE;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;score<sp/>=<sp/>0xffff;</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>hash<sp/>hit,<sp/>restore<sp/>this<sp/>fd<sp/>to<sp/>initial<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;score<sp/>=<sp/>SPIFFS_TEMPORAL_CACHE_HIT_SCORE;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;name_hash<sp/>=<sp/>name_hash;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_fd-&gt;file_nbr<sp/>=<sp/>cand_ix+1;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/>*fd<sp/>=<sp/>cur_fd;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_OUT_OF_FILE_DESCS;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>(void)name;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/>u32_t<sp/>i;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fds<sp/>=<sp/>(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*)fs-&gt;fd_space;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fs-&gt;fd_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*cur_fd<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;file_nbr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;file_nbr<sp/>=<sp/>i+1;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*fd<sp/>=<sp/>cur_fd;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_OUT_OF_FILE_DESCS;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal">s32_t<sp/>spiffs_fd_return(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/>spiffs_file<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&lt;=<sp/>0<sp/>||<sp/>f<sp/>&gt;<sp/>(s16_t)fs-&gt;fd_count)<sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_BAD_DESCRIPTOR;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fds<sp/>=<sp/>(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*)fs-&gt;fd_space;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fd<sp/>=<sp/>&amp;fds[f-1];</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/>if<sp/>(fd-&gt;file_nbr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_FILE_CLOSED;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/>fd-&gt;file_nbr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_IX_MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>fd-&gt;ix_map<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal">s32_t<sp/>spiffs_fd_get(<ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,<sp/>spiffs_file<sp/>f,<sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>**fd)<sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>&lt;=<sp/>0<sp/>||<sp/>f<sp/>&gt;<sp/>(s16_t)fs-&gt;fd_count)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_BAD_DESCRIPTOR;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fds<sp/>=<sp/>(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*)fs-&gt;fd_space;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/>*fd<sp/>=<sp/>&amp;fds[f-1];</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/>if<sp/>((*fd)-&gt;file_nbr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_ERR_FILE_CLOSED;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPIFFS_OK;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SPIFFS_TEMPORAL_FD_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spiffs_fd_temporal_cache_rehash(</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__t" kindref="compound">spiffs</ref><sp/>*fs,</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*old_path,</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_path)<sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/>u32_t<sp/>i;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/>u32_t<sp/>old_hash<sp/>=<sp/>spiffs_hash(fs,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*)old_path);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/>u32_t<sp/>new_hash<sp/>=<sp/>spiffs_hash(fs,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8_t<sp/>*)new_path);</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*fds<sp/>=<sp/>(<ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*)fs-&gt;fd_space;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fs-&gt;fd_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structspiffs__fd" kindref="compound">spiffs_fd</ref><sp/>*cur_fd<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_fd-&gt;score<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>cur_fd-&gt;name_hash<sp/>==<sp/>old_hash)<sp/>{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_fd-&gt;name_hash<sp/>=<sp/>new_hash;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/spiffs_nucleus.c"/>
  </compounddef>
</doxygen>
